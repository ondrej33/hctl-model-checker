from implementation import *
import sys
import time
from random import randint


# ============================================================================================= #
# ================================= FIXED FORMULAE TEST CASES ================================= #
# ============================================================================================= #


# testing of doing EX + some operation directly on smaller BDDs when computing pre
# we will be computing predecessors of some non-trivial set,
#   lets say SET1=sinks (computed using EFP) and SET2=pre(sinks)

# union:   (EX SET1) | (EX SET2)
def model_check_test1a(model: Model, set1: Function, set2: Function) -> Function:
    return EX(model, set1) | EX(model, set2)


# union:   (EX SET1) | (EX SET2)
def model_check_test1b(model: Model, set1: Function, set2: Function) -> Function:
    current = model.bdd.add_expr("False")
    for i in range(model.num_props):
        current = current | (pre_E_one_var(model, f"s__{i}", set1) | pre_E_one_var(model, f"s__{i}", set2))
    return current


# union:   (EX SET1) | (EX SET2) == EX (SET1 | SET2)
def model_check_test1c(model: Model, set1: Function, set2: Function) -> Function:
    union = set1 | set2
    current = model.bdd.add_expr("False")
    for i in range(model.num_props):
        current = current | pre_E_one_var(model, f"s__{i}", union)
    return current


# intersection:   (AX SET1) & (AX SET2)
def model_check_test2a(model: Model, set1: Function, set2: Function) -> Function:
    return AX(model, set1) & AX(model, set2)


# intersection:   (AX SET1) & (AX SET2)
def model_check_test2b(model: Model, set1: Function, set2: Function) -> Function:
    current = model.bdd.add_expr("True")
    for i in range(model.num_props):
        current = current & (pre_A_one_var(model, f"s__{i}", set1) & pre_A_one_var(model, f"s__{i}", set2))
    return current


# intersection:   (AX SET1) & (AX SET2)
def model_check_test2c(model: Model, set1: Function, set2: Function) -> Function:
    intersection = set1 & set2
    current = model.bdd.add_expr("True")
    for i in range(model.num_props):
        current = current & pre_A_one_var(model, f"s__{i}", intersection)
    return current


# union:   (EX SET1) | (SET2)
def model_check_test3a(model: Model, set1: Function, set2: Function) -> Function:
    return EX(model, set1) | set2


# union:   (EX SET1) | (SET2)
def model_check_test3b(model: Model, set1: Function, set2: Function) -> Function:
    current = set2
    for i in range(model.num_props):
        current = current | pre_E_one_var(model, f"s__{i}", set1)
    return current


# binder AX:   ↓x. (AX SET1)
def model_check_test4a(model: Model, set1: Function) -> Function:
    ax = AX(model, set1)
    return bind(model, 'x', ax)


# binder AX:   ↓x. (AX SET1)
def model_check_test4b(model: Model, set1: Function) -> Function:
    current_set = model.bdd.add_expr("True")
    comparator = create_comparator(model, 'x')
    vars_to_get_rid = [f"x__{i}" for i in range(model.num_props)]

    for i in range(model.num_props):
        intersection = comparator & pre_A_one_var(model, f"s__{i}", set1)
        current_set = current_set & model.bdd.quantify(intersection, vars_to_get_rid)
    return current_set


# binder EX:   ↓x. (EX SET1)
def model_check_test5a(model: Model, set1: Function) -> Function:
    ex = EX(model, set1)
    return bind(model, 'x', ex)


# binder EX:   ↓x. (EX SET1)
def model_check_test5b(model: Model, set1: Function) -> Function:
    current_set = model.bdd.add_expr("False")
    comparator = create_comparator(model, 'x')
    vars_to_get_rid = [f"x__{i}" for i in range(model.num_props)]

    for i in range(model.num_props):
        intersection = comparator & pre_E_one_var(model, f"s__{i}", set1)
        current_set = current_set | model.bdd.quantify(intersection, vars_to_get_rid)
    return current_set


# jump EX:   @x. (EX SET1)
def model_check_test6a(model: Model, set1: Function) -> Function:
    ex = EX(model, set1)
    return jump(model, 'x', ex)


# jump EX:   @x. (EX SET1)
def model_check_test6b(model: Model, set1: Function) -> Function:
    current_set = model.bdd.add_expr("False")
    comparator = create_comparator(model, 'x')
    vars_to_get_rid = [f"s__{i}" for i in range(model.num_props)]

    for i in range(model.num_props):
        intersection = comparator & pre_E_one_var(model, f"s__{i}", set1)
        current_set = current_set | model.bdd.quantify(intersection, vars_to_get_rid)
    return current_set


# existential EX:   ∃x. (EX SET1)
def model_check_test7a(model: Model, set1: Function) -> Function:
    ex = EX(model, set1)
    return existential(model, 'x', ex)


# existential EX:   ∃x. (EX SET1)
def model_check_test7b(model: Model, set1: Function) -> Function:
    current_set = model.bdd.add_expr("False")
    vars_to_get_rid = [f"x__{i}" for i in range(model.num_props)]

    for i in range(model.num_props):
        pred = pre_E_one_var(model, f"s__{i}", set1)
        current_set = current_set | model.bdd.quantify(pred, vars_to_get_rid)
    return current_set


# ============================================================================================= #
# ================================= TEST SUIT FOR STUFF ABOVE ================================= #
# ============================================================================================= #

# create string of form x_i & ~x_j... - 50% chance that var is not present, 25% that it is positive, 25% negative
def create_random_combination_x(number_props, var='x'):
    string = "( True"
    for i in range(number_props):
        num = randint(0, 4)
        if num == 0:
            string += f" & {var}__{i}"
        elif num == 1:
            string += f" & ~{var}__{i}"
    string += ")"
    return string


# list generated by function above
X_COMBINATIONS = ['( True)', '( True)', '( True & x__1)', '( True & ~x__1)', '( True & x__0 & x__3)', '( True & ~x__1)', '( True & x__0 & x__1 & ~x__5)', '( True & ~x__3)', '( True & ~x__1 & x__2 & ~x__3 & x__4)', '( True & ~x__2 & ~x__3 & x__5 & ~x__6 & x__7)', '( True & ~x__0 & x__1 & ~x__2 & x__5 & x__6 & x__7 & ~x__9)', '( True & x__2 & x__4 & x__9)', '( True & ~x__1 & ~x__5 & x__9)', '( True & x__3 & x__4 & ~x__5)', '( True & x__0 & ~x__2 & ~x__3 & ~x__4 & x__5 & x__6 & ~x__11 & x__12)', '( True & ~x__0 & ~x__3 & ~x__6 & ~x__12)', '( True & x__3 & x__7 & x__11 & x__12 & ~x__13 & x__15)', '( True & x__0 & x__2 & x__5 & ~x__9 & ~x__15 & ~x__16)', '( True & x__1 & x__2 & ~x__6 & ~x__8 & x__10 & x__12 & ~x__17)', '( True & x__1 & x__4 & x__5 & ~x__8 & ~x__10 & ~x__14)', '( True & x__7 & x__9 & ~x__11 & x__17)', '( True & x__0 & x__3 & x__4 & x__5 & x__8 & ~x__10 & ~x__11 & x__15)', '( True & x__0 & x__1 & x__2 & x__3 & ~x__4 & x__6 & x__7 & ~x__8 & x__9 & ~x__10 & ~x__15 & x__19 & ~x__20)', '( True & x__1 & ~x__5 & x__7 & ~x__8 & ~x__9 & ~x__10 & x__13 & ~x__15 & ~x__16 & x__18)', '( True & ~x__0 & ~x__1 & x__3 & x__4 & ~x__5 & ~x__7 & x__8 & x__13 & ~x__14 & ~x__15 & ~x__22 & ~x__23)', '( True & ~x__0 & x__5 & ~x__6 & ~x__7 & x__8 & x__14 & ~x__15 & ~x__19 & ~x__22)', '( True & ~x__0 & ~x__1 & ~x__3 & ~x__4 & ~x__10 & x__13 & ~x__14 & x__15 & x__17 & ~x__20 & ~x__21 & x__23 & ~x__24)', '( True & ~x__0 & x__3 & ~x__4 & x__7 & ~x__8 & x__9 & x__10 & ~x__11 & x__12 & x__14 & x__20 & x__21 & ~x__22 & ~x__23 & ~x__25)', '( True & ~x__0 & ~x__1 & x__4 & x__9 & ~x__10 & ~x__11 & x__13 & ~x__14 & ~x__15 & ~x__19 & ~x__20 & ~x__21 & x__23 & ~x__24 & ~x__25)', '( True & x__2 & x__3 & ~x__5 & ~x__6 & ~x__7 & ~x__10 & ~x__11 & x__12 & x__17 & x__22 & ~x__24 & x__28)', '( True & ~x__0 & x__6 & ~x__7 & x__16 & x__17 & x__20 & ~x__25 & ~x__26 & x__28 & ~x__29)', '( True & x__0 & x__1 & x__5 & ~x__13 & x__17 & ~x__23 & x__27 & x__28)', '( True & x__1 & x__2 & x__3 & ~x__6 & x__7 & x__8 & x__9 & ~x__14 & ~x__15 & x__19 & x__20 & ~x__22 & x__28)', '( True & ~x__4 & x__9 & x__12 & x__17 & x__19 & x__21 & ~x__22 & x__23 & x__24 & ~x__26 & x__29 & ~x__31)', '( True & ~x__1 & ~x__3 & x__4 & ~x__5 & ~x__8 & x__10 & x__18 & ~x__19 & x__21 & x__25 & ~x__27 & ~x__29 & x__30 & x__31)', '( True & x__2 & x__4 & ~x__5 & x__6 & x__7 & x__9 & ~x__13 & ~x__15 & ~x__17 & x__18 & x__19 & ~x__20 & x__25 & x__27 & ~x__29 & ~x__33)', '( True & x__0 & x__1 & ~x__4 & ~x__11 & x__13 & ~x__14 & ~x__17 & x__19 & ~x__21 & x__22 & ~x__23 & ~x__27 & ~x__30 & x__32)', '( True & ~x__1 & ~x__2 & ~x__6 & ~x__7 & x__15 & x__21 & x__23 & x__24 & x__29 & ~x__34 & ~x__35 & ~x__36)', '( True & x__2 & ~x__9 & ~x__10 & ~x__14 & ~x__16 & x__17 & ~x__21 & x__26 & ~x__27 & ~x__32 & x__34 & ~x__35)', '( True & x__0 & x__3 & ~x__7 & ~x__8 & ~x__9 & x__12 & x__16 & ~x__18 & x__19 & ~x__21 & x__26 & x__27 & ~x__30 & ~x__33 & ~x__34 & ~x__35 & x__36 & ~x__37)', '( True & x__2 & ~x__5 & ~x__6 & ~x__11 & x__12 & x__14 & x__16 & ~x__19 & x__25 & ~x__26 & ~x__27 & x__30 & ~x__33 & ~x__35 & ~x__36 & x__38)', '( True & x__0 & x__3 & x__5 & x__8 & ~x__11 & x__13 & x__15 & ~x__17 & x__21 & x__23 & x__25 & ~x__28 & x__31 & ~x__32 & x__38 & x__39 & ~x__40)', '( True & x__0 & x__3 & x__4 & ~x__7 & x__10 & x__13 & x__15 & ~x__16 & x__20 & ~x__21 & ~x__23 & x__26 & x__30 & ~x__31 & x__33 & ~x__35 & ~x__38)', '( True & x__2 & ~x__5 & x__7 & ~x__8 & x__11 & ~x__12 & x__17 & x__20 & x__21 & x__23 & ~x__25 & ~x__26 & x__27 & ~x__30 & x__33 & ~x__37 & x__41 & ~x__42)', '( True & ~x__5 & ~x__11 & ~x__15 & x__18 & ~x__19 & ~x__27 & ~x__29 & ~x__30 & ~x__31 & x__32 & x__34 & x__36 & ~x__38 & ~x__40 & ~x__42 & ~x__43)', '( True & ~x__0 & ~x__1 & ~x__4 & ~x__5 & x__7 & ~x__9 & x__14 & x__16 & x__17 & ~x__22 & ~x__23 & ~x__24 & ~x__25 & x__28 & x__36 & ~x__39 & ~x__40 & ~x__42)', '( True & x__4 & x__5 & ~x__6 & ~x__13 & ~x__21 & ~x__22 & ~x__24 & x__26 & ~x__28 & ~x__32 & x__33 & ~x__34 & x__35 & ~x__43 & x__45)', '( True & x__7 & x__9 & x__13 & x__14 & ~x__15 & x__18 & x__19 & x__21 & ~x__22 & ~x__24 & x__28 & ~x__29 & x__30 & x__33 & x__36 & ~x__41 & ~x__43 & ~x__46)', '( True & x__3 & x__7 & x__8 & ~x__9 & ~x__13 & ~x__15 & ~x__16 & x__17 & x__19 & x__20 & ~x__21 & ~x__23 & x__27 & x__30 & ~x__35 & ~x__36 & x__39 & ~x__46)', '( True & x__0 & x__2 & x__3 & ~x__4 & x__8 & x__14 & ~x__16 & x__17 & x__19 & ~x__22 & ~x__23 & ~x__27 & x__29 & x__30 & x__32 & ~x__33 & x__39 & x__42 & ~x__43 & ~x__44 & ~x__45)', '( True & x__0 & ~x__2 & x__4 & x__5 & x__7 & ~x__9 & ~x__10 & ~x__11 & x__15 & x__16 & ~x__17 & ~x__18 & x__24 & ~x__30 & x__35 & ~x__36 & ~x__37 & x__38 & x__44 & ~x__45)', '( True & x__5 & ~x__9 & x__10 & ~x__13 & ~x__15 & x__18 & x__27 & ~x__31 & ~x__33 & x__35 & ~x__43 & ~x__47)', '( True & x__2 & x__6 & x__9 & ~x__16 & x__18 & x__20 & ~x__21 & ~x__22 & x__23 & ~x__26 & ~x__27 & ~x__28 & ~x__32 & x__33 & x__37 & x__39 & x__42 & x__46 & x__50 & x__51)', '( True & x__0 & ~x__4 & ~x__6 & x__10 & x__14 & x__16 & x__17 & ~x__19 & ~x__20 & ~x__22 & x__24 & x__25 & ~x__26 & ~x__27 & x__29 & x__30 & x__34 & x__38 & x__41 & x__42 & x__47 & ~x__49 & x__51)', '( True & ~x__1 & ~x__3 & x__5 & ~x__15 & ~x__19 & ~x__21 & x__25 & x__28 & ~x__31 & x__34 & x__37 & ~x__38 & ~x__41 & ~x__44 & x__46 & x__47 & ~x__48 & ~x__50)', '( True & x__3 & ~x__4 & x__7 & ~x__9 & x__11 & x__15 & x__21 & ~x__23 & x__26 & x__28 & ~x__30 & ~x__32 & ~x__37 & ~x__38 & x__39 & x__40 & ~x__44 & x__47 & x__48 & ~x__49)', '( True & x__3 & x__5 & ~x__9 & x__11 & x__14 & x__18 & ~x__19 & ~x__20 & ~x__25 & ~x__26 & ~x__32 & x__33 & x__34 & ~x__36 & ~x__39 & ~x__45 & x__46 & ~x__48 & x__53 & x__55)', '( True & ~x__0 & ~x__2 & x__3 & x__8 & x__11 & ~x__15 & ~x__16 & x__24 & ~x__26 & x__27 & x__28 & ~x__30 & ~x__31 & x__32 & x__33 & x__37 & x__38 & x__39 & ~x__42 & ~x__47 & ~x__51 & x__52)', '( True & x__2 & ~x__3 & x__4 & ~x__5 & ~x__10 & ~x__11 & ~x__12 & x__14 & x__15 & x__21 & ~x__24 & x__27 & x__29 & ~x__31 & ~x__32 & x__36 & x__37 & x__40 & ~x__43 & ~x__45 & x__50 & ~x__51 & ~x__54)', '( True & ~x__4 & x__5 & ~x__9 & x__15 & x__18 & x__19 & x__20 & ~x__22 & ~x__23 & ~x__26 & ~x__32 & ~x__34 & x__36 & ~x__37 & ~x__38 & x__39 & ~x__42 & ~x__44 & ~x__46 & ~x__51 & ~x__55 & ~x__57)', '( True & x__9 & x__11 & ~x__15 & x__17 & ~x__18 & x__19 & ~x__21 & x__23 & x__28 & x__30 & ~x__32 & ~x__37 & ~x__44 & x__45 & x__46 & ~x__48 & ~x__49 & x__50 & ~x__52 & x__54)', '( True & x__0 & ~x__1 & ~x__2 & ~x__3 & ~x__5 & x__7 & ~x__8 & ~x__9 & ~x__12 & x__17 & ~x__18 & x__20 & x__21 & ~x__22 & x__27 & ~x__28 & ~x__29 & ~x__31 & x__32 & x__34 & ~x__35 & x__36 & x__37 & ~x__38 & ~x__39 & ~x__46 & ~x__47 & ~x__48 & ~x__49 & ~x__53 & ~x__54 & x__58)', '( True & ~x__1 & ~x__4 & x__5 & x__8 & x__12 & ~x__15 & ~x__17 & x__28 & ~x__35 & ~x__36 & x__37 & ~x__40 & ~x__42 & ~x__45 & x__48 & x__51 & x__52 & ~x__53 & ~x__55 & ~x__58 & x__59)', '( True & x__0 & x__1 & ~x__4 & x__6 & ~x__9 & ~x__13 & x__14 & ~x__16 & x__19 & ~x__21 & ~x__23 & x__25 & x__26 & ~x__28 & ~x__30 & x__32 & ~x__36 & x__37 & x__38 & ~x__42 & ~x__46 & ~x__48 & x__50 & ~x__51 & ~x__52 & ~x__53 & x__55 & x__57 & ~x__59 & ~x__61)', '( True & ~x__3 & ~x__6 & x__8 & ~x__10 & ~x__12 & x__13 & ~x__17 & x__18 & x__19 & x__20 & x__21 & x__23 & ~x__26 & ~x__27 & x__29 & x__30 & x__31 & ~x__32 & x__33 & x__34 & ~x__37 & ~x__38 & x__39 & ~x__40 & x__42 & x__43 & x__44 & ~x__46 & x__50 & x__51 & ~x__52 & ~x__53 & ~x__54 & ~x__56 & ~x__59 & ~x__63)', '( True & x__0 & x__6 & ~x__7 & x__10 & x__11 & ~x__16 & x__24 & x__27 & x__28 & ~x__29 & x__30 & x__32 & ~x__37 & ~x__38 & ~x__40 & ~x__42 & ~x__44 & ~x__45 & x__47 & x__48 & ~x__50 & x__52 & x__53 & x__54 & ~x__56 & ~x__59 & x__63)', '( True & ~x__0 & ~x__2 & ~x__3 & x__6 & ~x__8 & x__10 & x__11 & ~x__15 & x__17 & x__24 & x__31 & ~x__33 & x__40 & ~x__41 & x__46 & ~x__50 & x__53 & ~x__58 & x__59 & ~x__60 & ~x__61 & x__62 & x__65)', '( True & ~x__1 & x__2 & ~x__3 & ~x__6 & x__8 & x__9 & x__10 & ~x__11 & ~x__12 & x__14 & ~x__23 & ~x__26 & ~x__28 & x__30 & ~x__32 & ~x__33 & x__36 & x__40 & ~x__46 & ~x__47 & ~x__49 & ~x__52 & ~x__55 & ~x__58 & ~x__59 & ~x__60 & ~x__63 & x__66)', '( True & ~x__0 & x__1 & x__6 & ~x__7 & x__8 & ~x__16 & x__18 & ~x__22 & ~x__23 & ~x__25 & x__26 & ~x__28 & ~x__32 & ~x__33 & x__37 & x__40 & ~x__44 & x__47 & x__59 & x__60 & x__65)', '( True & x__0 & x__1 & x__2 & ~x__5 & x__6 & x__7 & x__8 & ~x__12 & ~x__15 & x__16 & x__19 & x__21 & x__23 & ~x__24 & x__25 & x__27 & ~x__29 & ~x__34 & x__36 & ~x__37 & ~x__42 & x__43 & x__47 & ~x__50 & x__52 & x__53 & ~x__56 & ~x__61 & x__62 & ~x__66 & x__68)', '( True & x__0 & ~x__1 & ~x__2 & x__3 & ~x__5 & x__7 & x__8 & ~x__13 & x__15 & ~x__17 & ~x__19 & ~x__20 & x__22 & ~x__27 & ~x__31 & ~x__32 & x__33 & x__36 & ~x__39 & ~x__42 & x__43 & ~x__44 & ~x__45 & ~x__46 & x__47 & x__49 & ~x__51 & ~x__54 & x__58 & ~x__61 & x__63 & x__64 & ~x__66 & x__69)', '( True & x__1 & x__2 & ~x__4 & ~x__5 & ~x__7 & ~x__8 & x__10 & x__11 & ~x__14 & x__15 & ~x__16 & x__23 & ~x__24 & x__30 & ~x__32 & ~x__33 & x__35 & x__38 & ~x__44 & x__46 & ~x__50 & ~x__54 & ~x__55 & x__59 & x__63 & x__68)', '( True & ~x__1 & ~x__3 & x__4 & ~x__5 & ~x__12 & x__14 & x__18 & x__19 & x__20 & x__24 & x__31 & ~x__32 & x__34 & x__35 & x__40 & ~x__45 & ~x__47 & ~x__48 & x__50 & x__51 & x__60 & ~x__61 & ~x__63 & ~x__65 & x__68)', '( True & ~x__2 & x__3 & x__4 & x__5 & ~x__6 & x__7 & ~x__8 & ~x__11 & x__15 & x__18 & x__19 & x__22 & x__25 & x__30 & ~x__38 & x__41 & x__43 & x__44 & x__51 & ~x__52 & ~x__54 & ~x__59 & ~x__61 & x__63 & ~x__64 & x__65 & ~x__66 & x__67 & x__69 & x__70 & x__72)', '( True & x__3 & ~x__6 & x__8 & ~x__9 & x__16 & x__18 & ~x__19 & x__20 & x__21 & ~x__22 & ~x__26 & ~x__27 & ~x__29 & x__35 & x__41 & ~x__43 & x__46 & x__47 & x__50 & x__55 & ~x__56 & x__58 & ~x__59 & x__60 & x__62 & ~x__67 & ~x__68 & ~x__71)', '( True & x__2 & ~x__4 & x__5 & x__6 & x__7 & x__8 & x__9 & ~x__12 & x__18 & ~x__21 & x__24 & x__26 & x__27 & ~x__32 & x__35 & ~x__37 & x__40 & x__45 & x__46 & ~x__47 & x__54 & x__55 & ~x__56 & ~x__60 & ~x__65 & ~x__66 & x__67 & x__68 & ~x__71)', '( True & x__3 & x__7 & ~x__9 & ~x__10 & x__11 & ~x__12 & ~x__13 & ~x__15 & x__17 & ~x__18 & x__21 & ~x__24 & x__25 & ~x__26 & x__28 & x__29 & x__31 & x__33 & ~x__35 & x__41 & x__44 & ~x__45 & x__47 & x__48 & x__49 & ~x__50 & ~x__51 & ~x__54 & ~x__59 & x__60 & x__61 & x__66 & x__68 & ~x__69 & ~x__70 & ~x__75)', '( True & ~x__0 & ~x__2 & x__8 & ~x__9 & ~x__10 & ~x__14 & x__18 & ~x__19 & ~x__21 & ~x__22 & ~x__23 & x__27 & ~x__28 & x__34 & ~x__37 & ~x__38 & ~x__39 & x__41 & ~x__42 & x__44 & ~x__46 & ~x__47 & ~x__48 & ~x__50 & ~x__53 & x__54 & ~x__57 & x__62 & ~x__66 & ~x__70 & x__72 & x__73 & x__74 & ~x__76)', '( True & x__1 & x__2 & x__3 & ~x__6 & x__8 & ~x__9 & ~x__16 & x__17 & ~x__28 & x__29 & ~x__30 & x__31 & x__41 & ~x__44 & x__47 & ~x__49 & ~x__51 & x__53 & x__54 & x__56 & ~x__57 & x__61 & x__65 & ~x__66 & ~x__74 & ~x__76)', '( True & x__0 & x__1 & ~x__2 & ~x__8 & ~x__10 & ~x__11 & x__13 & x__16 & ~x__20 & x__24 & x__25 & ~x__26 & x__27 & ~x__28 & x__33 & ~x__40 & x__56 & x__57 & ~x__61 & x__62 & x__64 & ~x__69 & ~x__70 & ~x__71 & ~x__72 & x__76 & x__77 & x__78)', '( True & x__1 & ~x__6 & ~x__8 & ~x__9 & ~x__11 & x__12 & ~x__14 & x__17 & x__18 & ~x__20 & ~x__21 & x__25 & x__29 & x__32 & ~x__33 & ~x__35 & x__39 & x__40 & ~x__42 & x__44 & x__45 & x__47 & x__48 & ~x__49 & ~x__55 & ~x__56 & x__57 & x__58 & x__59 & x__60 & ~x__67 & x__69 & x__74 & ~x__75 & x__77 & ~x__78)', '( True & ~x__0 & ~x__2 & x__3 & x__4 & ~x__5 & ~x__9 & ~x__10 & ~x__11 & ~x__12 & x__14 & x__16 & ~x__17 & ~x__18 & ~x__19 & ~x__20 & ~x__25 & ~x__27 & x__28 & ~x__30 & x__36 & ~x__39 & x__44 & x__50 & x__54 & ~x__56 & x__61 & x__66 & x__67 & x__69 & x__75 & x__77 & x__79 & ~x__80)', '( True & ~x__1 & ~x__4 & ~x__5 & x__6 & x__12 & x__15 & x__18 & x__19 & x__20 & ~x__21 & x__23 & ~x__24 & x__25 & ~x__29 & x__31 & ~x__32 & ~x__33 & ~x__34 & x__36 & x__38 & x__41 & x__44 & ~x__48 & x__59 & ~x__62 & x__64 & x__67 & x__71 & ~x__73 & x__75 & ~x__77 & x__78 & x__79 & x__81)', '( True & ~x__0 & ~x__5 & x__6 & ~x__8 & x__10 & ~x__12 & x__13 & x__14 & x__27 & ~x__28 & x__31 & x__33 & ~x__35 & ~x__38 & x__43 & ~x__44 & ~x__45 & x__46 & x__47 & ~x__48 & ~x__49 & ~x__52 & x__56 & ~x__59 & x__62 & x__66 & x__67 & ~x__70 & x__72 & ~x__73 & x__74 & x__78 & ~x__79)', '( True & ~x__3 & x__4 & x__8 & ~x__9 & x__12 & x__13 & x__15 & ~x__19 & ~x__22 & x__23 & x__24 & ~x__26 & x__28 & x__30 & ~x__32 & x__34 & x__39 & ~x__40 & ~x__41 & ~x__42 & x__44 & ~x__50 & x__53 & ~x__54 & ~x__56 & x__57 & ~x__63 & ~x__68 & ~x__70 & ~x__72 & ~x__75 & x__76 & ~x__77 & ~x__78)', '( True & x__0 & ~x__1 & ~x__2 & x__3 & x__7 & ~x__13 & x__14 & ~x__16 & ~x__19 & x__21 & ~x__22 & x__27 & ~x__31 & x__34 & x__35 & ~x__37 & ~x__40 & ~x__45 & ~x__52 & ~x__59 & x__60 & x__65 & x__66 & x__67 & ~x__68 & x__72 & x__73 & x__79 & ~x__81 & ~x__84)', '( True & x__5 & ~x__6 & x__10 & ~x__11 & ~x__13 & x__16 & ~x__25 & ~x__33 & ~x__38 & ~x__40 & x__42 & x__43 & x__44 & x__45 & x__47 & ~x__49 & x__51 & x__54 & x__57 & x__63 & x__64 & ~x__71 & ~x__77 & ~x__78 & x__83 & x__84 & ~x__85)', '( True & ~x__0 & ~x__2 & ~x__4 & ~x__8 & x__9 & x__14 & x__17 & ~x__22 & ~x__23 & x__24 & ~x__25 & x__26 & x__27 & x__28 & ~x__32 & x__34 & x__40 & x__43 & ~x__45 & ~x__47 & ~x__52 & ~x__53 & x__57 & x__58 & x__59 & ~x__64 & ~x__65 & ~x__67 & x__71 & ~x__73 & ~x__74 & ~x__75 & ~x__77 & ~x__79 & ~x__85)', '( True & ~x__3 & x__5 & x__11 & x__12 & ~x__13 & x__17 & ~x__20 & x__22 & x__24 & x__25 & ~x__26 & x__27 & x__30 & x__33 & x__34 & x__36 & x__42 & x__43 & ~x__45 & ~x__48 & ~x__49 & x__54 & ~x__55 & x__57 & ~x__59 & x__60 & x__61 & x__62 & ~x__65 & x__67 & x__69 & ~x__71 & ~x__72 & ~x__77 & ~x__79 & x__80 & ~x__84 & x__86 & x__87)', '( True & x__0 & ~x__6 & ~x__7 & x__9 & ~x__14 & ~x__16 & x__18 & ~x__22 & x__26 & ~x__27 & ~x__31 & ~x__32 & ~x__36 & ~x__37 & ~x__38 & ~x__39 & x__41 & ~x__44 & x__45 & ~x__50 & ~x__53 & ~x__56 & ~x__57 & x__59 & x__65 & ~x__67 & ~x__68 & ~x__72 & ~x__73 & ~x__76 & x__80 & ~x__86)', '( True & x__2 & x__4 & ~x__6 & x__7 & ~x__10 & x__11 & ~x__12 & x__15 & ~x__16 & x__18 & x__19 & x__20 & x__22 & x__23 & x__25 & x__26 & x__33 & x__35 & x__38 & x__40 & x__44 & x__45 & ~x__47 & ~x__48 & x__50 & x__58 & ~x__60 & x__62 & ~x__65 & ~x__67 & ~x__69 & ~x__70 & ~x__71 & x__74 & ~x__78 & x__80 & x__84 & x__86 & x__87 & x__88 & x__89)', '( True & x__1 & x__4 & ~x__5 & ~x__6 & x__10 & x__13 & ~x__16 & x__17 & ~x__23 & ~x__25 & ~x__27 & ~x__28 & x__31 & ~x__34 & x__35 & x__39 & x__40 & x__41 & ~x__45 & x__51 & x__53 & x__57 & x__62 & ~x__63 & x__64 & ~x__65 & x__67 & x__68 & x__72 & x__76 & x__77 & ~x__78 & ~x__79 & ~x__81 & ~x__83 & x__88 & ~x__90)', '( True & x__2 & ~x__5 & x__7 & ~x__10 & x__12 & ~x__16 & x__19 & x__20 & x__21 & ~x__26 & x__27 & x__32 & ~x__34 & ~x__36 & ~x__38 & ~x__42 & x__45 & x__46 & x__47 & ~x__50 & ~x__54 & ~x__58 & x__61 & x__62 & ~x__63 & ~x__65 & ~x__66 & x__68 & ~x__69 & x__74 & x__75 & x__76 & x__79 & ~x__80 & ~x__81 & x__82 & x__83 & x__85 & ~x__88 & x__89 & ~x__91)', '( True & ~x__0 & ~x__2 & ~x__6 & ~x__7 & ~x__14 & ~x__15 & ~x__19 & ~x__20 & ~x__23 & x__24 & ~x__32 & ~x__43 & x__44 & x__47 & ~x__48 & ~x__49 & ~x__59 & ~x__62 & ~x__64 & ~x__67 & ~x__68 & ~x__72 & x__84 & x__85 & ~x__89)', '( True & ~x__1 & x__2 & ~x__3 & ~x__4 & x__5 & x__7 & x__9 & ~x__10 & x__15 & ~x__16 & x__17 & x__18 & ~x__20 & ~x__23 & x__24 & ~x__25 & ~x__30 & x__31 & ~x__33 & x__38 & ~x__41 & x__42 & x__43 & x__44 & x__46 & x__47 & x__48 & ~x__49 & x__50 & x__52 & x__56 & x__58 & ~x__59 & x__60 & ~x__61 & ~x__62 & ~x__72 & x__74 & x__75 & ~x__77 & x__79 & ~x__80 & x__81 & ~x__82)', '( True & ~x__1 & ~x__3 & x__4 & ~x__6 & ~x__7 & x__12 & x__13 & ~x__15 & ~x__16 & x__17 & x__20 & x__21 & ~x__22 & x__23 & ~x__25 & x__28 & x__29 & x__31 & x__33 & x__34 & x__37 & ~x__39 & x__45 & ~x__46 & x__47 & x__48 & ~x__51 & ~x__53 & ~x__56 & x__57 & x__62 & x__66 & ~x__67 & x__68 & x__70 & ~x__71 & x__72 & ~x__74 & x__75 & x__79 & x__81 & ~x__82 & ~x__90 & ~x__92)', '( True & ~x__1 & ~x__2 & ~x__4 & ~x__5 & ~x__8 & x__9 & ~x__16 & x__19 & x__23 & ~x__24 & ~x__28 & x__33 & x__36 & ~x__41 & x__44 & ~x__48 & ~x__51 & ~x__52 & x__56 & ~x__58 & ~x__61 & ~x__62 & ~x__63 & x__64 & ~x__65 & ~x__66 & ~x__67 & x__68 & x__70 & x__71 & ~x__76 & x__77 & x__82 & ~x__84 & x__86 & ~x__87 & ~x__89 & x__91 & x__92 & x__94 & x__95)', '( True & x__0 & ~x__1 & ~x__4 & x__10 & x__13 & ~x__15 & ~x__18 & x__19 & x__22 & ~x__24 & x__31 & ~x__32 & ~x__33 & ~x__34 & ~x__35 & ~x__37 & ~x__39 & ~x__40 & x__44 & ~x__45 & x__48 & ~x__50 & ~x__59 & x__60 & x__61 & x__62 & ~x__63 & x__65 & x__67 & ~x__68 & ~x__70 & ~x__71 & x__78 & ~x__79 & ~x__80 & x__83 & x__86 & ~x__88 & ~x__90 & x__91 & ~x__93)', '( True & x__0 & ~x__1 & ~x__2 & x__6 & x__8 & ~x__14 & x__15 & x__18 & x__19 & ~x__22 & x__24 & ~x__25 & x__27 & ~x__28 & ~x__29 & x__30 & ~x__36 & x__39 & ~x__44 & x__47 & ~x__48 & x__50 & x__54 & x__56 & ~x__57 & ~x__58 & ~x__65 & ~x__68 & ~x__69 & ~x__73 & x__75 & ~x__76 & ~x__77 & ~x__79 & x__80 & ~x__85 & x__91 & ~x__92 & x__93 & ~x__94 & ~x__97)', '( True & x__2 & x__3 & x__5 & x__10 & ~x__14 & x__15 & ~x__16 & ~x__17 & x__19 & ~x__20 & ~x__21 & ~x__27 & x__28 & x__31 & ~x__32 & x__35 & ~x__41 & ~x__47 & ~x__49 & ~x__51 & x__54 & ~x__56 & ~x__58 & x__65 & x__77 & x__78 & ~x__79 & x__80 & x__84 & x__89 & x__92 & x__95)', '( True & ~x__0 & ~x__3 & ~x__4 & x__6 & ~x__10 & ~x__11 & x__13 & ~x__15 & x__17 & ~x__20 & ~x__21 & ~x__23 & x__25 & x__29 & x__34 & x__37 & x__39 & x__40 & x__42 & ~x__49 & x__50 & x__51 & x__52 & ~x__53 & ~x__54 & ~x__55 & ~x__58 & x__61 & x__63 & ~x__67 & x__69 & x__74 & x__81 & ~x__84 & x__85 & x__87 & x__91 & ~x__94 & x__99)', '( True & ~x__1 & ~x__2 & ~x__13 & x__15 & x__16 & x__18 & ~x__26 & ~x__29 & x__34 & x__35 & x__36 & ~x__37 & x__38 & x__44 & ~x__46 & ~x__47 & ~x__49 & x__50 & x__51 & x__57 & ~x__58 & x__61 & ~x__64 & x__72 & x__73 & ~x__74 & x__84 & x__87 & x__93 & ~x__94 & ~x__96 & ~x__97 & ~x__98 & ~x__99 & x__100)', '( True & x__0 & ~x__1 & ~x__4 & ~x__5 & ~x__6 & ~x__7 & ~x__13 & x__15 & ~x__18 & ~x__19 & x__24 & ~x__25 & ~x__26 & x__27 & x__35 & ~x__40 & ~x__41 & x__42 & ~x__44 & x__51 & x__54 & x__56 & ~x__61 & ~x__64 & x__65 & ~x__71 & ~x__72 & ~x__75 & ~x__77 & x__80 & ~x__81 & ~x__84 & x__87 & x__88 & x__92 & ~x__94 & x__95 & ~x__96 & x__98 & ~x__101)', '( True & x__0 & ~x__2 & ~x__9 & x__12 & x__18 & ~x__20 & ~x__21 & x__23 & x__25 & ~x__28 & ~x__31 & ~x__32 & x__33 & ~x__37 & ~x__38 & ~x__42 & x__43 & ~x__46 & ~x__50 & x__52 & ~x__54 & x__56 & x__59 & ~x__62 & ~x__63 & x__70 & x__72 & x__74 & ~x__77 & ~x__80 & x__82 & x__85 & x__87 & ~x__90 & ~x__92 & ~x__94 & x__96 & x__98 & x__101 & ~x__102)', '( True & x__3 & x__4 & ~x__9 & ~x__12 & x__13 & x__14 & x__15 & x__16 & ~x__18 & ~x__19 & ~x__20 & ~x__25 & ~x__27 & x__29 & x__30 & ~x__33 & x__34 & x__36 & ~x__37 & x__39 & x__40 & ~x__42 & ~x__47 & x__48 & ~x__49 & ~x__52 & ~x__54 & x__58 & ~x__59 & x__66 & x__68 & x__69 & x__76 & ~x__77 & x__78 & x__80 & ~x__90 & ~x__91 & ~x__94)', '( True & x__5 & x__7 & ~x__9 & x__11 & ~x__12 & ~x__15 & ~x__18 & x__19 & x__22 & x__26 & x__27 & ~x__34 & x__35 & x__36 & ~x__40 & ~x__43 & ~x__45 & x__46 & ~x__49 & ~x__54 & ~x__55 & x__57 & ~x__64 & x__66 & ~x__68 & x__71 & x__72 & ~x__73 & x__74 & x__76 & x__79 & x__81 & x__84 & ~x__85 & x__90 & x__93 & x__94 & x__95 & ~x__96 & x__98 & ~x__99 & x__100 & x__103)', '( True & x__0 & ~x__6 & ~x__9 & x__10 & ~x__11 & x__12 & ~x__13 & ~x__14 & ~x__18 & ~x__20 & ~x__28 & x__29 & x__31 & ~x__36 & x__39 & x__40 & x__42 & x__43 & ~x__45 & ~x__46 & ~x__47 & ~x__49 & x__50 & x__51 & ~x__52 & x__54 & x__55 & x__56 & ~x__57 & ~x__59 & ~x__61 & ~x__63 & ~x__67 & ~x__72 & ~x__73 & x__76 & x__78 & x__83 & ~x__84 & x__88 & ~x__91 & x__92 & x__95 & ~x__96 & x__98)', '( True & x__0 & ~x__1 & ~x__2 & x__5 & ~x__6 & x__7 & ~x__9 & x__10 & x__11 & x__12 & ~x__13 & x__14 & ~x__20 & ~x__28 & x__40 & ~x__43 & ~x__46 & ~x__47 & x__49 & ~x__53 & ~x__55 & ~x__57 & ~x__64 & ~x__68 & x__71 & x__74 & x__75 & x__80 & x__81 & ~x__82 & x__85 & ~x__87 & x__89 & ~x__90 & x__91 & x__94 & x__96 & x__97 & ~x__99 & x__101 & ~x__104 & x__106)', '( True & ~x__2 & x__4 & x__5 & x__7 & x__11 & x__12 & ~x__13 & x__14 & ~x__17 & x__18 & x__20 & x__21 & ~x__26 & ~x__27 & ~x__32 & ~x__34 & ~x__38 & ~x__41 & ~x__43 & x__45 & x__47 & ~x__49 & ~x__54 & x__57 & ~x__61 & ~x__64 & ~x__69 & ~x__70 & ~x__71 & ~x__76 & ~x__78 & ~x__80 & ~x__81 & x__86 & x__88 & ~x__91 & ~x__93 & x__95 & x__98 & x__99 & x__103)', '( True & ~x__1 & x__2 & x__4 & x__5 & ~x__12 & ~x__13 & ~x__14 & ~x__20 & ~x__21 & x__24 & x__25 & ~x__27 & ~x__32 & ~x__33 & ~x__38 & x__39 & ~x__50 & x__51 & x__52 & ~x__57 & x__58 & ~x__59 & ~x__61 & x__62 & ~x__63 & x__64 & ~x__73 & x__74 & ~x__78 & ~x__79 & ~x__80 & ~x__81 & x__84 & x__86 & x__87 & x__90 & ~x__92 & ~x__93 & x__94 & x__95 & x__99 & ~x__106 & ~x__107)', '( True & ~x__0 & x__2 & x__5 & ~x__7 & x__8 & x__12 & x__13 & ~x__14 & ~x__16 & x__18 & x__19 & x__20 & ~x__22 & x__24 & ~x__25 & ~x__33 & x__34 & x__37 & x__38 & ~x__39 & ~x__41 & ~x__44 & ~x__46 & x__47 & ~x__48 & ~x__50 & ~x__52 & x__54 & x__57 & x__58 & x__59 & ~x__63 & ~x__66 & x__78 & ~x__81 & x__82 & x__86 & x__87 & x__90 & ~x__93 & x__96 & x__99 & ~x__100 & x__101 & ~x__102 & ~x__103 & ~x__104 & x__106 & x__107)', '( True & ~x__2 & ~x__6 & x__8 & ~x__12 & x__13 & x__17 & x__18 & x__21 & ~x__24 & x__29 & ~x__32 & x__34 & ~x__35 & x__36 & ~x__40 & ~x__41 & ~x__43 & x__52 & x__54 & ~x__60 & x__62 & ~x__69 & x__73 & x__74 & ~x__75 & x__82 & ~x__87 & ~x__89 & ~x__90 & ~x__92 & x__95 & ~x__96 & x__99 & x__101 & ~x__103 & x__108 & ~x__109)', '( True & ~x__2 & x__5 & ~x__6 & x__9 & ~x__13 & x__15 & ~x__16 & ~x__19 & x__20 & ~x__31 & ~x__33 & x__34 & ~x__36 & ~x__37 & x__38 & ~x__39 & x__40 & x__42 & x__48 & x__49 & ~x__50 & x__51 & x__52 & ~x__58 & ~x__59 & ~x__61 & x__64 & ~x__68 & ~x__69 & x__70 & ~x__72 & ~x__75 & x__76 & ~x__79 & ~x__81 & x__82 & x__83 & ~x__85 & ~x__89 & x__90 & x__92 & ~x__94 & x__95 & ~x__97 & x__98 & x__99 & x__102 & x__105 & x__111)', '( True & ~x__1 & ~x__7 & x__9 & x__10 & x__13 & ~x__14 & x__17 & ~x__19 & x__21 & x__23 & ~x__25 & x__32 & x__34 & x__38 & ~x__40 & ~x__42 & ~x__47 & ~x__48 & x__49 & x__50 & ~x__54 & ~x__64 & ~x__66 & ~x__70 & ~x__71 & ~x__72 & x__78 & ~x__79 & x__83 & ~x__85 & ~x__87 & x__88 & ~x__89 & x__91 & x__94 & ~x__95 & x__101 & ~x__103 & ~x__104 & ~x__106 & ~x__107 & x__108 & x__110 & x__111 & x__112)', '( True & x__0 & x__1 & ~x__2 & x__6 & ~x__7 & ~x__14 & ~x__15 & ~x__16 & ~x__17 & ~x__18 & ~x__24 & ~x__26 & ~x__30 & ~x__31 & ~x__32 & ~x__33 & ~x__34 & ~x__35 & ~x__38 & ~x__39 & x__41 & x__43 & ~x__47 & x__50 & ~x__56 & ~x__60 & ~x__63 & ~x__65 & x__66 & x__67 & x__68 & x__70 & x__71 & x__74 & ~x__75 & x__78 & ~x__84 & x__85 & x__89 & ~x__91 & x__92 & x__95 & x__96 & ~x__97 & ~x__98 & x__100 & x__101 & ~x__108 & x__110)', '( True & ~x__2 & ~x__3 & ~x__4 & ~x__7 & x__8 & ~x__9 & ~x__10 & ~x__12 & x__15 & x__17 & x__21 & x__23 & x__24 & ~x__25 & x__29 & x__33 & ~x__38 & ~x__39 & x__42 & x__43 & x__47 & x__48 & x__50 & ~x__52 & x__58 & x__59 & ~x__62 & x__63 & ~x__64 & x__68 & ~x__69 & ~x__70 & ~x__71 & ~x__72 & x__73 & x__75 & ~x__76 & ~x__78 & ~x__81 & ~x__82 & x__83 & ~x__84 & ~x__85 & x__86 & x__87 & ~x__88 & x__89 & x__95 & x__99 & x__100 & ~x__102 & ~x__110 & ~x__112 & x__113 & ~x__114)', '( True & ~x__1 & ~x__6 & ~x__8 & x__9 & ~x__12 & x__13 & x__14 & x__19 & ~x__25 & x__29 & x__31 & ~x__36 & x__38 & ~x__39 & ~x__44 & x__45 & x__48 & ~x__54 & ~x__55 & ~x__57 & ~x__58 & x__61 & ~x__65 & x__66 & ~x__70 & ~x__78 & ~x__80 & ~x__83 & x__87 & ~x__89 & x__90 & x__92 & ~x__93 & x__94 & ~x__96 & ~x__98 & x__100 & x__102 & ~x__103 & ~x__107 & x__108 & x__110 & x__113 & x__115)', '( True & x__0 & ~x__1 & x__4 & x__6 & ~x__15 & x__20 & x__21 & ~x__23 & ~x__26 & ~x__28 & ~x__29 & ~x__33 & x__34 & x__36 & ~x__38 & x__43 & ~x__44 & ~x__46 & ~x__48 & ~x__49 & ~x__51 & ~x__52 & x__53 & ~x__56 & ~x__59 & ~x__60 & ~x__63 & x__64 & ~x__65 & x__70 & x__71 & ~x__73 & ~x__74 & ~x__79 & x__83 & x__84 & x__87 & ~x__90 & x__92 & ~x__98 & x__99 & x__100 & ~x__104 & ~x__106 & ~x__107)', '( True & x__1 & ~x__2 & ~x__8 & ~x__10 & x__14 & ~x__15 & x__16 & x__17 & ~x__18 & ~x__19 & ~x__20 & x__26 & ~x__27 & ~x__28 & x__31 & ~x__35 & x__37 & ~x__40 & x__41 & ~x__43 & ~x__46 & ~x__48 & ~x__49 & x__50 & ~x__53 & ~x__56 & ~x__57 & ~x__59 & x__60 & ~x__62 & ~x__65 & x__66 & ~x__67 & x__68 & x__71 & x__74 & x__76 & ~x__80 & ~x__81 & ~x__82 & ~x__83 & x__85 & ~x__86 & ~x__88 & x__90 & x__94 & ~x__95 & x__96 & x__97 & ~x__99 & ~x__102 & ~x__104 & ~x__105 & ~x__110 & ~x__115)', '( True & x__0 & ~x__3 & ~x__4 & x__5 & x__7 & x__9 & ~x__10 & ~x__15 & x__16 & x__17 & x__19 & ~x__21 & ~x__24 & x__26 & ~x__28 & x__38 & ~x__39 & ~x__40 & ~x__43 & x__45 & x__51 & x__52 & x__54 & x__55 & ~x__56 & x__64 & ~x__67 & x__68 & ~x__77 & x__82 & ~x__88 & ~x__89 & x__95 & ~x__98 & x__99 & x__100 & x__101 & ~x__102 & x__103 & ~x__106 & ~x__109 & ~x__110 & x__112 & x__114 & x__115 & ~x__116 & ~x__118)', '( True & x__2 & ~x__5 & ~x__6 & ~x__7 & x__9 & ~x__13 & ~x__16 & x__18 & ~x__22 & ~x__31 & ~x__32 & ~x__33 & x__34 & x__35 & x__42 & ~x__43 & ~x__44 & ~x__45 & x__50 & ~x__53 & ~x__54 & ~x__56 & ~x__57 & ~x__59 & x__62 & x__65 & x__67 & x__70 & x__71 & x__75 & ~x__77 & ~x__78 & ~x__81 & ~x__85 & ~x__86 & x__92 & ~x__97 & x__98 & x__99 & ~x__100 & ~x__102 & ~x__104 & ~x__107 & x__108 & x__110 & x__111 & ~x__115 & x__117)', '( True & x__0 & x__1 & ~x__2 & ~x__7 & x__10 & ~x__13 & x__16 & x__20 & ~x__22 & x__23 & x__24 & x__28 & ~x__29 & x__34 & ~x__36 & x__42 & x__43 & ~x__44 & x__48 & ~x__50 & ~x__53 & x__55 & x__59 & x__61 & x__63 & ~x__65 & ~x__67 & x__68 & ~x__69 & x__71 & ~x__73 & x__74 & ~x__80 & x__81 & x__83 & ~x__89 & x__90 & x__93 & ~x__96 & ~x__97 & x__98 & x__99 & ~x__101 & x__105 & x__106 & x__111 & x__112 & x__118 & ~x__120)', '( True & x__0 & x__1 & ~x__3 & ~x__4 & x__5 & x__11 & ~x__12 & ~x__13 & ~x__14 & x__15 & ~x__16 & x__18 & x__20 & ~x__22 & ~x__26 & x__27 & ~x__30 & x__33 & x__37 & x__40 & ~x__41 & x__43 & x__46 & x__48 & x__50 & ~x__52 & x__57 & ~x__58 & x__60 & x__61 & x__67 & ~x__70 & x__71 & x__72 & ~x__74 & x__76 & x__78 & ~x__84 & ~x__85 & x__86 & ~x__87 & ~x__89 & ~x__91 & x__92 & ~x__93 & ~x__94 & x__96 & x__98 & ~x__100 & ~x__110 & x__111 & x__112 & x__114 & ~x__117 & x__118 & ~x__119)', '( True & x__0 & x__1 & x__5 & ~x__9 & x__14 & ~x__15 & x__16 & ~x__17 & x__18 & ~x__24 & x__26 & x__28 & x__30 & x__31 & x__33 & ~x__36 & ~x__38 & ~x__39 & x__41 & ~x__42 & ~x__50 & x__52 & ~x__59 & x__64 & x__65 & ~x__66 & x__70 & x__72 & ~x__77 & ~x__82 & x__89 & x__94 & x__97 & x__101 & ~x__103 & x__104 & ~x__105 & ~x__111 & ~x__112 & ~x__113 & x__114 & ~x__117 & ~x__118 & ~x__121)', '( True & x__2 & x__6 & ~x__7 & x__8 & ~x__10 & x__19 & x__21 & ~x__22 & ~x__25 & ~x__27 & x__30 & ~x__31 & x__32 & ~x__33 & x__37 & x__38 & ~x__43 & ~x__44 & ~x__46 & x__48 & x__49 & ~x__51 & x__53 & x__55 & x__56 & x__57 & x__60 & x__63 & ~x__64 & x__65 & ~x__67 & ~x__68 & x__69 & ~x__70 & ~x__71 & x__72 & x__73 & x__84 & ~x__91 & x__92 & ~x__93 & x__100 & ~x__102 & ~x__106 & ~x__108 & x__109 & ~x__110 & x__112 & ~x__115 & x__120 & ~x__121 & x__122)', '( True & ~x__7 & ~x__9 & ~x__10 & x__11 & x__19 & ~x__20 & x__21 & ~x__26 & x__29 & x__30 & x__33 & ~x__41 & x__45 & x__46 & x__47 & ~x__48 & x__52 & ~x__56 & x__59 & ~x__60 & ~x__62 & x__63 & x__66 & ~x__72 & ~x__74 & x__79 & ~x__81 & x__83 & x__88 & x__93 & ~x__94 & ~x__95 & ~x__97 & x__98 & x__101 & x__103 & x__108 & ~x__110 & x__111 & x__112 & ~x__116 & x__117 & x__121 & ~x__123 & x__124)', '( True & ~x__0 & x__2 & x__4 & x__5 & x__7 & ~x__10 & x__14 & x__16 & ~x__18 & x__21 & ~x__23 & ~x__26 & x__28 & ~x__30 & ~x__31 & ~x__33 & ~x__34 & x__35 & x__40 & ~x__41 & ~x__42 & x__46 & ~x__47 & ~x__54 & x__57 & x__59 & x__60 & x__61 & x__62 & ~x__63 & ~x__64 & ~x__66 & ~x__67 & ~x__71 & ~x__72 & x__74 & x__76 & x__79 & x__80 & x__83 & x__86 & ~x__87 & ~x__89 & x__90 & x__93 & x__95 & x__96 & ~x__101 & ~x__105 & ~x__107 & x__109 & x__110 & x__111 & x__115 & x__118 & ~x__119 & x__123 & x__124 & x__125)', '( True & ~x__4 & x__9 & ~x__12 & ~x__13 & x__14 & x__19 & ~x__23 & ~x__24 & x__27 & ~x__28 & x__30 & x__37 & x__41 & ~x__42 & ~x__43 & x__44 & x__48 & x__51 & x__54 & ~x__61 & x__63 & x__70 & ~x__75 & x__78 & x__79 & ~x__80 & ~x__81 & ~x__87 & ~x__90 & ~x__93 & ~x__95 & ~x__96 & x__97 & ~x__101 & x__103 & x__104 & ~x__107 & ~x__109 & ~x__110 & ~x__113 & x__114 & ~x__116 & x__118 & ~x__121 & ~x__124 & ~x__125 & x__126)', '( True & x__0 & ~x__2 & ~x__6 & ~x__9 & ~x__14 & x__17 & ~x__19 & x__21 & x__22 & x__23 & x__24 & ~x__25 & x__26 & ~x__27 & x__29 & ~x__30 & x__31 & x__33 & x__34 & ~x__35 & x__36 & ~x__41 & ~x__44 & x__47 & ~x__49 & x__54 & x__56 & x__58 & ~x__60 & x__62 & ~x__66 & x__70 & x__72 & ~x__73 & x__74 & x__75 & ~x__76 & x__77 & ~x__84 & x__86 & x__87 & ~x__92 & x__93 & x__96 & ~x__102 & x__103 & x__106 & ~x__107 & x__109 & x__115 & x__117 & ~x__119 & ~x__121)', '( True & x__4 & ~x__8 & x__15 & x__19 & ~x__20 & x__25 & x__27 & x__31 & ~x__33 & ~x__34 & ~x__35 & ~x__36 & ~x__37 & ~x__39 & x__43 & ~x__44 & ~x__51 & x__53 & x__54 & x__56 & x__57 & x__59 & ~x__62 & x__63 & ~x__64 & x__65 & ~x__67 & ~x__70 & ~x__71 & ~x__72 & x__73 & x__74 & x__75 & ~x__78 & x__79 & ~x__82 & x__83 & x__84 & x__86 & x__87 & x__89 & ~x__90 & x__92 & x__103 & x__109 & ~x__112 & x__113 & ~x__115 & ~x__119 & ~x__122 & ~x__123 & x__127)', '( True & x__0 & ~x__1 & x__2 & ~x__3 & ~x__4 & ~x__5 & ~x__6 & x__8 & ~x__13 & ~x__14 & x__20 & ~x__22 & ~x__23 & ~x__24 & ~x__26 & ~x__28 & ~x__31 & x__32 & ~x__36 & x__38 & ~x__39 & x__41 & ~x__42 & ~x__43 & ~x__46 & ~x__48 & ~x__50 & x__51 & ~x__53 & x__59 & ~x__60 & ~x__61 & ~x__63 & ~x__64 & ~x__67 & x__69 & x__70 & ~x__72 & ~x__80 & x__84 & ~x__88 & ~x__92 & ~x__98 & ~x__99 & x__100 & x__101 & ~x__105 & x__106 & x__108 & x__109 & ~x__111 & ~x__112 & ~x__115 & ~x__119 & ~x__120 & ~x__122 & x__124)', '( True & x__2 & x__7 & ~x__10 & ~x__11 & x__12 & x__13 & ~x__19 & x__20 & ~x__24 & x__25 & x__27 & x__32 & x__37 & x__38 & ~x__40 & ~x__41 & ~x__42 & ~x__43 & ~x__44 & x__45 & ~x__49 & ~x__51 & ~x__54 & x__56 & ~x__60 & ~x__61 & x__63 & ~x__65 & ~x__67 & x__68 & x__69 & ~x__70 & x__71 & ~x__77 & x__85 & x__88 & ~x__91 & ~x__92 & ~x__93 & ~x__94 & x__96 & ~x__97 & ~x__99 & x__100 & ~x__103 & x__105 & x__107 & x__108 & ~x__109 & ~x__111 & x__112 & x__114 & ~x__115 & x__117 & x__118 & ~x__121 & ~x__122 & ~x__126 & x__127 & x__129)', '( True & ~x__5 & ~x__6 & ~x__9 & ~x__10 & x__11 & x__14 & ~x__17 & ~x__19 & ~x__21 & x__22 & ~x__24 & x__29 & ~x__31 & ~x__39 & ~x__43 & x__47 & x__51 & ~x__52 & ~x__57 & x__58 & ~x__61 & ~x__62 & x__65 & ~x__67 & x__70 & x__71 & x__77 & ~x__79 & ~x__82 & x__83 & x__85 & x__88 & x__92 & x__93 & x__94 & ~x__97 & ~x__98 & x__99 & ~x__100 & x__101 & ~x__105 & x__109 & x__110 & ~x__112 & ~x__115 & ~x__119 & x__122 & x__125 & ~x__126 & x__128 & x__131)', '( True & x__2 & x__3 & x__4 & ~x__5 & ~x__6 & ~x__7 & x__8 & x__11 & x__14 & ~x__19 & ~x__20 & ~x__21 & x__28 & x__33 & ~x__34 & ~x__36 & ~x__39 & ~x__41 & x__42 & ~x__44 & ~x__47 & ~x__48 & x__50 & ~x__53 & ~x__54 & x__55 & ~x__56 & x__59 & x__61 & x__63 & x__67 & x__70 & x__71 & x__72 & x__75 & x__77 & x__78 & ~x__79 & ~x__80 & ~x__81 & x__90 & x__92 & ~x__93 & x__94 & x__98 & x__100 & ~x__102 & x__103 & ~x__106 & x__108 & x__115 & ~x__117 & x__118 & ~x__120 & ~x__121 & x__124 & x__125 & x__128 & ~x__129 & x__130)', '( True & ~x__1 & ~x__3 & ~x__5 & ~x__7 & ~x__12 & x__25 & ~x__26 & ~x__27 & x__28 & x__29 & x__31 & x__33 & ~x__34 & x__37 & x__44 & x__45 & ~x__51 & ~x__55 & ~x__56 & ~x__61 & x__63 & ~x__64 & ~x__65 & ~x__67 & ~x__69 & ~x__70 & ~x__71 & x__73 & ~x__76 & ~x__78 & ~x__81 & x__85 & ~x__91 & x__92 & x__93 & x__94 & x__99 & x__101 & x__102 & x__103 & x__106 & x__108 & x__109 & ~x__115 & ~x__123 & ~x__129 & ~x__130)', '( True & ~x__1 & x__10 & x__11 & ~x__13 & ~x__14 & ~x__15 & ~x__17 & x__20 & ~x__21 & ~x__23 & ~x__25 & x__29 & ~x__35 & ~x__36 & x__37 & ~x__44 & x__50 & ~x__51 & ~x__52 & x__54 & ~x__57 & x__58 & ~x__60 & ~x__61 & x__63 & ~x__64 & ~x__65 & ~x__67 & ~x__71 & ~x__72 & ~x__73 & ~x__74 & ~x__75 & ~x__77 & x__82 & x__84 & x__86 & ~x__87 & ~x__88 & x__90 & ~x__91 & x__93 & x__97 & ~x__100 & ~x__102 & ~x__109 & ~x__111 & x__113 & x__115 & ~x__116 & x__117 & x__120 & ~x__122 & ~x__123 & ~x__126 & x__127 & x__133 & x__134)', '( True & ~x__0 & ~x__2 & x__3 & x__4 & ~x__8 & ~x__9 & ~x__13 & ~x__14 & ~x__17 & ~x__23 & x__25 & x__26 & x__27 & x__32 & x__34 & ~x__36 & ~x__37 & x__39 & x__41 & ~x__43 & x__48 & x__49 & ~x__51 & ~x__53 & ~x__54 & ~x__55 & ~x__56 & ~x__58 & ~x__59 & x__61 & x__64 & ~x__65 & ~x__68 & ~x__81 & x__82 & x__84 & x__92 & ~x__94 & x__99 & ~x__105 & x__106 & ~x__107 & x__108 & x__114 & ~x__118 & x__119 & ~x__121 & ~x__123 & x__126 & ~x__129 & x__130 & ~x__131 & x__132)', '( True & ~x__1 & ~x__3 & x__4 & ~x__5 & ~x__8 & ~x__11 & x__13 & x__14 & ~x__15 & x__16 & x__17 & ~x__22 & ~x__31 & x__32 & ~x__33 & x__34 & ~x__35 & ~x__36 & x__37 & ~x__42 & ~x__44 & ~x__46 & ~x__47 & x__49 & ~x__50 & ~x__52 & ~x__56 & x__57 & ~x__59 & x__60 & x__63 & x__64 & ~x__68 & x__69 & ~x__71 & x__72 & ~x__74 & ~x__75 & x__77 & ~x__80 & ~x__84 & ~x__87 & x__89 & x__95 & ~x__100 & ~x__101 & x__109 & ~x__110 & x__111 & x__117 & x__118 & x__119 & x__123 & ~x__126 & x__127 & ~x__130 & ~x__131 & x__132 & x__134 & ~x__135)', '( True & x__1 & x__4 & x__6 & ~x__8 & ~x__12 & x__19 & x__21 & x__23 & x__24 & x__26 & x__27 & ~x__32 & ~x__34 & ~x__35 & x__36 & ~x__38 & x__39 & ~x__42 & x__43 & x__44 & ~x__50 & x__52 & x__54 & ~x__57 & ~x__59 & x__62 & ~x__65 & x__66 & ~x__67 & ~x__72 & ~x__74 & ~x__76 & ~x__77 & x__81 & ~x__83 & ~x__84 & x__85 & ~x__86 & ~x__87 & x__91 & ~x__94 & x__96 & ~x__98 & x__103 & x__106 & ~x__112 & ~x__116 & x__117 & ~x__118 & ~x__120 & x__121 & x__132 & x__133 & x__134 & x__137)', '( True & x__4 & ~x__7 & x__10 & x__11 & x__15 & ~x__19 & x__20 & x__21 & x__23 & ~x__28 & x__33 & ~x__42 & x__43 & x__47 & x__49 & x__50 & ~x__55 & x__58 & x__64 & x__65 & ~x__67 & x__68 & ~x__69 & x__72 & ~x__74 & ~x__76 & x__82 & x__84 & x__86 & x__88 & ~x__92 & ~x__93 & ~x__94 & ~x__95 & ~x__96 & ~x__97 & ~x__100 & x__103 & ~x__105 & x__112 & x__115 & ~x__116 & x__117 & x__118 & ~x__119 & x__120 & ~x__130 & ~x__135 & x__138)', '( True & x__2 & x__4 & ~x__7 & ~x__10 & ~x__11 & x__13 & x__20 & ~x__22 & ~x__23 & ~x__25 & ~x__27 & x__29 & ~x__30 & ~x__32 & x__38 & ~x__39 & x__41 & x__44 & ~x__45 & ~x__50 & ~x__51 & x__52 & x__53 & x__58 & x__60 & ~x__64 & ~x__67 & ~x__82 & x__83 & ~x__84 & x__85 & x__88 & x__91 & ~x__92 & x__93 & ~x__94 & ~x__95 & ~x__96 & x__99 & x__102 & ~x__103 & x__105 & x__107 & ~x__108 & x__111 & ~x__112 & x__113 & ~x__116 & x__120 & x__122 & x__123 & ~x__128 & ~x__129 & ~x__131 & x__135 & x__136)', '( True & ~x__2 & ~x__5 & x__10 & ~x__15 & x__16 & ~x__18 & ~x__21 & ~x__24 & x__26 & ~x__31 & x__32 & x__34 & ~x__38 & ~x__40 & x__43 & ~x__45 & x__50 & x__52 & x__55 & x__56 & ~x__58 & x__60 & x__61 & x__62 & ~x__64 & x__66 & x__68 & ~x__71 & x__73 & x__75 & x__76 & ~x__77 & x__78 & x__80 & x__88 & ~x__90 & x__96 & x__97 & ~x__99 & ~x__101 & ~x__102 & ~x__103 & ~x__107 & x__108 & x__109 & ~x__113 & x__115 & x__116 & ~x__119 & x__124 & x__128 & x__129 & x__137 & ~x__138)', '( True & ~x__2 & ~x__3 & x__5 & x__11 & ~x__14 & x__16 & ~x__24 & x__25 & ~x__28 & x__30 & x__31 & x__32 & ~x__33 & ~x__35 & ~x__42 & x__45 & ~x__47 & ~x__51 & x__58 & x__63 & x__64 & ~x__65 & x__66 & x__71 & x__72 & ~x__76 & x__78 & ~x__79 & ~x__84 & x__85 & x__87 & x__91 & x__94 & x__97 & ~x__98 & ~x__99 & ~x__101 & ~x__102 & ~x__108 & ~x__110 & ~x__111 & ~x__115 & ~x__116 & x__117 & ~x__118 & x__120 & ~x__121 & x__122 & x__124 & ~x__125 & x__126 & x__133 & ~x__134 & x__136 & x__137 & ~x__138 & x__139 & ~x__141)', '( True & ~x__0 & x__1 & ~x__3 & ~x__4 & x__7 & ~x__9 & ~x__10 & x__11 & ~x__16 & ~x__17 & ~x__20 & x__23 & x__24 & ~x__25 & x__26 & x__27 & x__28 & ~x__29 & ~x__30 & ~x__31 & x__35 & x__36 & x__37 & x__38 & ~x__45 & x__52 & ~x__62 & x__66 & x__74 & x__76 & ~x__79 & ~x__80 & ~x__84 & ~x__86 & x__88 & x__89 & x__91 & ~x__98 & x__101 & ~x__102 & x__103 & x__105 & ~x__106 & ~x__107 & ~x__108 & ~x__111 & ~x__112 & ~x__113 & ~x__116 & x__118 & x__119 & x__120 & ~x__121 & ~x__125 & x__129 & x__131 & x__134 & x__138 & x__140 & ~x__142)', '( True & ~x__4 & ~x__6 & ~x__7 & x__15 & ~x__16 & x__17 & x__18 & x__21 & ~x__24 & x__26 & x__27 & ~x__30 & ~x__31 & ~x__35 & ~x__38 & x__39 & ~x__40 & ~x__41 & ~x__42 & ~x__45 & x__47 & x__48 & ~x__54 & ~x__55 & x__56 & ~x__57 & x__58 & x__60 & ~x__61 & ~x__67 & ~x__68 & ~x__69 & ~x__71 & ~x__72 & x__75 & ~x__78 & ~x__79 & ~x__81 & ~x__82 & ~x__85 & ~x__87 & x__90 & x__92 & ~x__93 & ~x__94 & ~x__97 & ~x__98 & x__99 & ~x__101 & x__102 & x__109 & x__110 & x__111 & x__115 & ~x__121 & x__122 & x__123 & ~x__126 & ~x__127 & ~x__133 & ~x__137)', '( True & x__0 & ~x__3 & ~x__5 & x__7 & ~x__8 & x__10 & ~x__11 & ~x__12 & x__13 & x__14 & ~x__15 & x__16 & ~x__18 & ~x__19 & ~x__22 & x__24 & ~x__28 & ~x__30 & x__33 & ~x__35 & x__39 & ~x__41 & x__44 & ~x__46 & ~x__48 & x__54 & ~x__55 & ~x__56 & x__58 & x__62 & x__63 & x__64 & x__68 & x__70 & ~x__72 & x__75 & ~x__78 & x__80 & x__81 & ~x__83 & x__84 & ~x__86 & x__93 & x__97 & x__99 & ~x__105 & ~x__106 & x__107 & x__108 & x__116 & ~x__118 & ~x__119 & x__122 & x__124 & ~x__126 & ~x__127 & x__128 & x__130 & x__134 & ~x__139 & ~x__143)', '( True & x__0 & ~x__1 & x__2 & ~x__14 & x__17 & ~x__19 & x__22 & ~x__24 & ~x__25 & ~x__30 & x__31 & ~x__33 & ~x__35 & x__39 & x__40 & ~x__42 & x__50 & ~x__56 & x__63 & x__64 & x__70 & x__77 & x__81 & ~x__83 & x__84 & ~x__88 & x__91 & x__92 & ~x__93 & x__97 & ~x__104 & x__106 & ~x__108 & ~x__111 & x__113 & ~x__115 & ~x__118 & ~x__124 & ~x__125 & x__129 & ~x__133 & x__139 & x__140)', '( True & ~x__0 & x__1 & x__2 & ~x__5 & x__8 & ~x__12 & x__13 & ~x__14 & ~x__15 & x__19 & ~x__25 & x__27 & ~x__28 & ~x__30 & x__31 & x__33 & ~x__40 & ~x__42 & x__45 & x__47 & x__50 & ~x__51 & x__53 & ~x__59 & x__60 & x__62 & x__63 & ~x__65 & x__68 & ~x__70 & ~x__72 & x__74 & ~x__77 & ~x__80 & x__85 & ~x__95 & x__96 & x__98 & ~x__100 & x__101 & x__103 & x__107 & ~x__108 & x__112 & x__114 & x__117 & x__120 & ~x__121 & ~x__122 & ~x__123 & ~x__125 & x__130 & ~x__131 & x__132 & ~x__133 & ~x__134 & x__138 & ~x__141 & x__142 & ~x__144 & ~x__146)', '( True & x__0 & x__1 & ~x__3 & ~x__4 & ~x__6 & ~x__9 & x__12 & x__13 & x__14 & ~x__15 & x__16 & x__19 & x__21 & x__23 & x__25 & ~x__26 & x__27 & x__29 & ~x__31 & x__32 & x__34 & ~x__36 & x__37 & ~x__39 & x__40 & ~x__41 & x__42 & ~x__44 & ~x__50 & x__54 & ~x__55 & x__56 & ~x__57 & x__61 & ~x__64 & x__65 & ~x__66 & ~x__70 & x__71 & x__72 & ~x__73 & x__74 & x__75 & ~x__77 & ~x__84 & ~x__86 & ~x__90 & x__93 & x__95 & x__96 & x__99 & ~x__100 & ~x__101 & x__102 & ~x__112 & x__117 & x__119 & ~x__120 & x__121 & ~x__125 & ~x__126 & ~x__127 & ~x__130 & ~x__132 & ~x__133 & x__137 & ~x__140 & x__142 & ~x__145)', '( True & ~x__1 & ~x__2 & ~x__3 & x__5 & ~x__9 & ~x__13 & x__16 & ~x__17 & x__18 & ~x__21 & x__22 & ~x__25 & ~x__30 & ~x__32 & ~x__35 & x__40 & ~x__43 & ~x__48 & x__50 & x__52 & ~x__53 & x__54 & ~x__57 & x__58 & x__59 & x__63 & x__66 & ~x__67 & x__68 & ~x__70 & x__72 & x__76 & x__77 & ~x__81 & x__83 & ~x__86 & ~x__87 & ~x__88 & ~x__89 & x__90 & ~x__91 & ~x__94 & x__96 & ~x__98 & ~x__100 & x__103 & ~x__110 & ~x__111 & x__115 & x__123 & ~x__124 & ~x__125 & x__133 & ~x__136 & x__138 & ~x__147)', '( True & ~x__0 & ~x__3 & ~x__4 & x__7 & ~x__8 & x__9 & ~x__10 & ~x__12 & ~x__15 & ~x__16 & x__19 & x__22 & ~x__25 & ~x__30 & x__31 & x__32 & ~x__33 & x__35 & x__37 & x__43 & ~x__45 & ~x__46 & ~x__49 & ~x__56 & x__60 & ~x__63 & ~x__64 & ~x__68 & ~x__70 & ~x__73 & ~x__74 & ~x__79 & ~x__81 & x__83 & ~x__85 & x__87 & x__88 & ~x__89 & x__92 & ~x__93 & ~x__94 & ~x__95 & x__96 & ~x__97 & x__99 & x__100 & ~x__101 & x__104 & ~x__105 & ~x__106 & ~x__107 & x__109 & ~x__111 & x__112 & x__115 & x__119 & x__125 & ~x__126 & ~x__129 & ~x__134 & x__137 & x__138 & ~x__139 & ~x__140 & x__141 & x__142 & x__143 & ~x__144 & x__145 & ~x__147 & x__148)', '( True & ~x__3 & x__5 & x__7 & x__9 & x__11 & ~x__15 & ~x__16 & x__19 & x__23 & x__25 & x__26 & x__32 & x__40 & ~x__41 & ~x__44 & ~x__47 & x__53 & x__54 & ~x__56 & x__59 & ~x__60 & x__63 & ~x__68 & ~x__70 & ~x__72 & ~x__76 & x__78 & ~x__79 & x__84 & x__87 & x__90 & x__92 & x__95 & ~x__99 & ~x__101 & ~x__103 & x__104 & x__109 & x__111 & x__112 & ~x__118 & ~x__122 & ~x__124 & ~x__126 & ~x__127 & x__129 & ~x__131 & ~x__132 & x__134 & x__135 & ~x__136 & ~x__137 & ~x__139 & x__141 & ~x__144 & x__147 & x__149 & ~x__150)', '( True & ~x__2 & ~x__5 & x__6 & x__7 & x__8 & ~x__10 & x__12 & x__13 & x__14 & x__15 & ~x__17 & x__19 & x__22 & x__24 & x__26 & ~x__27 & x__28 & ~x__32 & x__35 & ~x__36 & ~x__39 & ~x__40 & ~x__42 & x__44 & ~x__50 & x__51 & x__53 & ~x__54 & ~x__58 & x__59 & ~x__62 & ~x__64 & x__65 & x__69 & ~x__76 & ~x__77 & ~x__81 & x__83 & x__84 & x__88 & ~x__89 & ~x__92 & ~x__95 & ~x__96 & x__101 & ~x__102 & x__106 & ~x__110 & x__112 & ~x__113 & ~x__118 & ~x__120 & x__122 & ~x__125 & x__126 & ~x__127 & x__128 & x__131 & ~x__132 & x__140 & ~x__141 & x__143 & x__144 & x__146 & ~x__149)', '( True & ~x__0 & x__1 & x__4 & x__6 & x__11 & x__15 & x__17 & ~x__18 & x__19 & ~x__22 & x__24 & x__25 & x__27 & x__29 & x__30 & ~x__31 & ~x__33 & x__35 & ~x__44 & x__47 & x__48 & ~x__49 & ~x__51 & x__54 & x__55 & x__56 & x__58 & x__61 & x__64 & ~x__68 & x__72 & x__76 & ~x__78 & x__79 & ~x__84 & ~x__86 & x__92 & ~x__93 & x__98 & ~x__101 & x__105 & ~x__107 & ~x__109 & ~x__112 & x__113 & x__115 & ~x__117 & ~x__119 & x__121 & x__122 & x__123 & ~x__125 & x__126 & ~x__130 & ~x__133 & x__134 & ~x__136 & x__141 & ~x__144 & x__147 & x__148 & x__149 & x__151)', '( True & ~x__10 & x__11 & ~x__15 & ~x__17 & x__18 & x__20 & x__21 & x__23 & x__27 & x__34 & x__37 & x__41 & ~x__43 & ~x__45 & ~x__50 & x__56 & x__57 & x__59 & ~x__60 & ~x__66 & ~x__70 & ~x__72 & x__73 & ~x__74 & x__76 & x__79 & ~x__80 & x__83 & ~x__86 & ~x__87 & ~x__91 & ~x__94 & ~x__95 & x__97 & x__99 & x__100 & x__101 & x__104 & ~x__110 & ~x__111 & x__112 & x__114 & x__115 & x__116 & x__119 & ~x__120 & x__121 & x__122 & x__123 & ~x__126 & x__127 & ~x__131 & x__133 & x__140 & x__143 & ~x__146 & ~x__147 & ~x__148 & ~x__149 & x__151 & x__153)', '( True & ~x__0 & ~x__1 & x__2 & ~x__3 & ~x__7 & x__8 & ~x__14 & ~x__15 & ~x__18 & x__19 & ~x__21 & x__23 & x__26 & ~x__28 & x__32 & ~x__34 & ~x__35 & x__36 & x__37 & x__38 & ~x__40 & ~x__41 & ~x__42 & ~x__49 & ~x__50 & ~x__52 & x__53 & x__54 & ~x__61 & ~x__63 & ~x__64 & ~x__67 & ~x__69 & ~x__70 & ~x__75 & x__76 & x__77 & x__78 & x__79 & ~x__82 & x__83 & x__86 & ~x__87 & ~x__89 & x__90 & x__101 & ~x__109 & x__112 & ~x__113 & ~x__114 & ~x__115 & ~x__119 & ~x__121 & x__124 & ~x__129 & ~x__131 & x__134 & x__139 & x__140 & ~x__142 & ~x__143 & ~x__144 & ~x__148 & ~x__150 & ~x__152 & ~x__154)', '( True & ~x__1 & x__2 & x__6 & x__7 & x__11 & x__12 & x__15 & ~x__16 & x__18 & x__20 & x__22 & ~x__27 & x__31 & ~x__33 & x__38 & ~x__41 & x__44 & x__45 & x__50 & ~x__53 & ~x__54 & x__55 & ~x__56 & ~x__59 & ~x__63 & ~x__66 & x__70 & x__74 & x__77 & x__79 & x__80 & x__81 & x__82 & ~x__89 & ~x__90 & x__91 & x__92 & x__93 & x__95 & ~x__99 & ~x__103 & x__104 & x__105 & x__112 & x__113 & x__115 & ~x__119 & ~x__122 & x__126 & x__131 & x__132 & ~x__135 & x__136 & ~x__140 & x__142 & x__145 & x__146 & x__147 & x__148 & ~x__149 & x__150 & ~x__152 & ~x__154)', '( True & ~x__0 & ~x__7 & x__10 & ~x__11 & x__12 & ~x__13 & x__15 & ~x__16 & ~x__17 & ~x__18 & ~x__19 & ~x__20 & ~x__22 & ~x__23 & ~x__30 & x__31 & ~x__32 & x__33 & ~x__35 & x__38 & x__44 & x__45 & ~x__46 & x__47 & x__48 & ~x__50 & x__51 & x__53 & ~x__56 & x__58 & ~x__63 & ~x__65 & x__67 & ~x__68 & x__70 & ~x__77 & ~x__83 & ~x__84 & x__88 & ~x__89 & x__90 & x__92 & x__99 & x__104 & ~x__105 & x__107 & x__110 & ~x__112 & ~x__117 & x__120 & x__121 & x__122 & ~x__123 & ~x__124 & ~x__126 & ~x__130 & ~x__131 & x__132 & ~x__134 & ~x__135 & x__137 & ~x__138 & ~x__139 & ~x__140 & ~x__145 & x__148 & ~x__149 & x__150 & x__151 & ~x__155 & x__156)', '( True & ~x__0 & x__1 & ~x__7 & ~x__8 & ~x__9 & ~x__10 & ~x__11 & x__12 & ~x__16 & x__18 & x__21 & ~x__22 & x__24 & x__27 & x__29 & ~x__32 & x__33 & ~x__34 & ~x__36 & ~x__37 & x__38 & x__40 & ~x__42 & ~x__43 & ~x__44 & ~x__45 & ~x__46 & ~x__51 & x__55 & x__58 & ~x__64 & x__65 & ~x__66 & x__70 & x__71 & ~x__73 & x__74 & x__78 & ~x__79 & x__80 & x__84 & x__85 & ~x__86 & x__89 & ~x__92 & x__96 & x__98 & x__99 & x__102 & ~x__103 & x__104 & ~x__105 & ~x__106 & x__109 & ~x__110 & ~x__111 & x__113 & ~x__115 & x__122 & x__125 & ~x__126 & x__127 & ~x__129 & ~x__131 & ~x__136 & x__139 & ~x__144 & x__145 & x__147 & ~x__150 & ~x__153 & ~x__155 & x__156)', '( True & ~x__1 & ~x__2 & ~x__6 & x__8 & ~x__9 & ~x__10 & ~x__14 & x__20 & ~x__21 & ~x__23 & x__24 & ~x__31 & x__34 & x__36 & ~x__37 & ~x__39 & ~x__44 & x__45 & ~x__49 & ~x__52 & ~x__56 & ~x__57 & x__59 & x__64 & ~x__70 & ~x__72 & ~x__75 & x__76 & ~x__79 & x__80 & x__81 & ~x__86 & ~x__87 & x__90 & x__91 & ~x__94 & x__95 & x__96 & x__97 & x__98 & ~x__99 & ~x__101 & x__102 & ~x__103 & ~x__105 & ~x__108 & x__110 & x__113 & ~x__114 & ~x__118 & x__121 & ~x__122 & x__124 & ~x__125 & ~x__127 & x__128 & ~x__134 & x__135 & ~x__137 & ~x__139 & ~x__143 & x__144 & x__145 & x__148 & ~x__149 & ~x__150 & ~x__152 & x__155 & x__158)', '( True & ~x__1 & x__2 & x__5 & x__8 & ~x__9 & ~x__10 & ~x__12 & ~x__13 & x__18 & x__21 & ~x__23 & ~x__24 & ~x__25 & ~x__26 & x__29 & x__30 & x__31 & ~x__33 & ~x__39 & x__40 & ~x__41 & x__47 & ~x__51 & x__52 & x__53 & ~x__54 & ~x__56 & x__59 & x__60 & ~x__65 & x__66 & x__68 & ~x__74 & ~x__76 & x__79 & ~x__80 & x__81 & x__83 & ~x__94 & ~x__96 & ~x__97 & x__98 & ~x__100 & x__101 & x__102 & x__103 & ~x__105 & ~x__107 & x__108 & ~x__110 & x__111 & ~x__113 & x__117 & x__118 & ~x__122 & x__124 & x__126 & ~x__127 & x__128 & ~x__130 & ~x__132 & ~x__133 & x__136 & x__137 & ~x__138 & x__139 & ~x__142 & ~x__144 & ~x__146 & ~x__154 & x__155 & ~x__157 & ~x__159)', '( True & ~x__0 & x__4 & ~x__6 & x__8 & x__10 & ~x__14 & x__15 & ~x__16 & ~x__20 & ~x__22 & ~x__24 & ~x__25 & x__27 & ~x__31 & x__34 & x__35 & x__39 & x__46 & x__49 & x__57 & ~x__60 & x__61 & ~x__64 & ~x__65 & ~x__66 & ~x__68 & x__69 & ~x__70 & ~x__73 & ~x__75 & x__77 & x__78 & x__79 & x__80 & x__86 & x__87 & ~x__94 & ~x__97 & ~x__99 & ~x__104 & x__105 & x__110 & x__115 & x__116 & ~x__119 & x__122 & ~x__124 & x__128 & ~x__130 & x__132 & ~x__133 & x__134 & ~x__135 & x__138 & x__140 & ~x__143 & ~x__144 & ~x__145 & x__147 & ~x__148 & x__150 & ~x__151 & x__156 & ~x__157 & x__159 & ~x__160)', '( True & ~x__5 & x__7 & x__9 & ~x__10 & ~x__12 & ~x__14 & x__16 & ~x__23 & x__26 & ~x__30 & ~x__31 & x__33 & ~x__36 & ~x__37 & x__38 & ~x__41 & x__43 & ~x__46 & x__52 & x__53 & ~x__54 & x__55 & x__57 & ~x__58 & ~x__60 & ~x__63 & ~x__69 & x__71 & x__73 & x__83 & x__84 & x__90 & x__93 & ~x__95 & ~x__96 & x__97 & x__98 & ~x__99 & ~x__100 & ~x__105 & x__106 & ~x__108 & x__110 & x__115 & x__118 & ~x__119 & x__126 & ~x__128 & x__131 & ~x__136 & x__137 & ~x__143 & ~x__146 & ~x__148 & ~x__149 & ~x__151 & ~x__152 & x__155 & x__156 & x__159 & x__161)', '( True & x__0 & x__1 & ~x__2 & ~x__3 & x__4 & x__6 & x__7 & ~x__12 & x__17 & ~x__18 & x__19 & ~x__21 & x__23 & ~x__27 & x__29 & x__31 & x__33 & x__36 & ~x__38 & x__39 & x__40 & x__41 & ~x__44 & ~x__45 & x__55 & ~x__60 & x__63 & x__65 & ~x__66 & ~x__68 & x__77 & ~x__78 & ~x__80 & ~x__82 & x__83 & x__89 & x__90 & x__94 & ~x__97 & x__102 & x__106 & ~x__107 & x__109 & ~x__110 & x__113 & ~x__115 & ~x__119 & x__120 & ~x__124 & ~x__126 & ~x__127 & ~x__128 & x__129 & x__132 & x__138 & x__139 & x__141 & x__144 & x__145 & x__146 & ~x__150 & x__151 & x__152 & x__153 & x__156 & x__159 & ~x__162)', '( True & x__7 & x__12 & ~x__15 & x__16 & x__17 & ~x__20 & ~x__22 & x__31 & ~x__32 & ~x__40 & ~x__41 & x__43 & ~x__54 & x__55 & x__56 & ~x__58 & ~x__59 & ~x__60 & x__62 & x__65 & x__68 & x__69 & x__70 & x__73 & x__76 & ~x__81 & ~x__83 & ~x__84 & ~x__87 & ~x__90 & x__92 & x__95 & x__96 & ~x__97 & x__98 & ~x__100 & x__102 & x__110 & ~x__111 & ~x__115 & x__116 & x__118 & ~x__124 & ~x__125 & x__127 & ~x__130 & x__132 & ~x__134 & ~x__135 & x__137 & x__139 & x__140 & ~x__141 & ~x__142 & x__144 & ~x__145 & ~x__146 & x__147 & ~x__148 & ~x__150 & ~x__151 & x__152 & x__156 & x__157 & ~x__158 & x__159 & ~x__160 & x__162)', '( True & ~x__0 & x__1 & ~x__2 & x__4 & ~x__5 & x__7 & ~x__8 & ~x__9 & x__11 & ~x__14 & x__15 & ~x__18 & x__20 & ~x__23 & x__25 & ~x__27 & x__30 & ~x__31 & x__32 & x__33 & x__34 & x__35 & x__36 & x__40 & ~x__46 & ~x__47 & x__51 & ~x__56 & ~x__59 & ~x__61 & x__62 & ~x__64 & x__68 & x__71 & ~x__72 & ~x__73 & ~x__78 & x__82 & x__85 & x__86 & x__87 & ~x__90 & x__94 & x__98 & x__100 & x__101 & ~x__107 & ~x__109 & ~x__112 & ~x__117 & ~x__119 & x__120 & x__133 & ~x__134 & x__140 & x__142 & x__143 & ~x__145 & x__155 & x__164)', '( True & x__3 & x__4 & ~x__11 & ~x__17 & x__26 & x__33 & ~x__34 & x__36 & ~x__37 & ~x__39 & x__46 & x__49 & x__50 & x__51 & x__54 & ~x__55 & x__57 & x__59 & x__60 & x__69 & x__72 & ~x__75 & ~x__77 & x__79 & x__81 & x__83 & x__87 & ~x__88 & ~x__90 & x__91 & ~x__92 & ~x__93 & ~x__102 & ~x__103 & ~x__105 & x__108 & x__113 & x__117 & x__118 & ~x__122 & ~x__125 & x__127 & x__128 & x__129 & ~x__132 & x__140 & x__143 & x__144 & ~x__151 & x__154 & ~x__155 & ~x__156 & ~x__158 & ~x__159)', '( True & x__1 & x__2 & x__5 & ~x__7 & x__8 & x__11 & x__12 & ~x__16 & ~x__17 & ~x__18 & x__19 & x__22 & x__25 & x__28 & ~x__31 & ~x__35 & x__37 & ~x__40 & ~x__43 & x__46 & ~x__47 & x__49 & ~x__50 & x__51 & x__53 & x__54 & ~x__55 & ~x__60 & x__63 & ~x__65 & x__67 & x__68 & x__69 & x__70 & ~x__73 & x__75 & x__76 & ~x__80 & ~x__85 & x__86 & x__87 & x__92 & ~x__93 & ~x__95 & ~x__98 & ~x__106 & ~x__117 & ~x__118 & x__121 & x__123 & ~x__124 & ~x__125 & ~x__126 & ~x__128 & x__131 & x__133 & ~x__143 & ~x__144 & ~x__145 & ~x__148 & ~x__152 & x__155 & ~x__157 & x__158 & x__162 & ~x__163 & x__165)', '( True & ~x__1 & ~x__2 & ~x__3 & x__4 & x__7 & ~x__13 & x__15 & ~x__16 & ~x__18 & x__20 & ~x__22 & ~x__23 & x__25 & x__27 & x__29 & ~x__30 & x__31 & x__32 & x__34 & x__35 & x__37 & ~x__42 & x__45 & x__48 & x__49 & ~x__50 & x__52 & ~x__53 & x__54 & ~x__55 & x__57 & ~x__58 & ~x__60 & x__64 & ~x__68 & ~x__70 & ~x__71 & ~x__73 & ~x__74 & x__79 & x__81 & ~x__87 & x__89 & ~x__94 & x__95 & x__97 & ~x__99 & ~x__105 & ~x__112 & x__113 & ~x__116 & x__121 & ~x__122 & ~x__124 & x__125 & x__126 & ~x__127 & ~x__128 & x__129 & x__140 & x__141 & ~x__150 & ~x__155 & ~x__157 & x__158 & x__162)', '( True & x__0 & ~x__1 & x__2 & ~x__6 & ~x__7 & x__10 & ~x__12 & ~x__16 & x__17 & ~x__23 & ~x__24 & ~x__26 & x__34 & x__35 & ~x__36 & ~x__37 & x__40 & ~x__45 & x__46 & ~x__47 & x__50 & ~x__51 & ~x__53 & ~x__54 & x__62 & x__63 & x__64 & ~x__66 & ~x__68 & ~x__70 & ~x__71 & ~x__72 & x__83 & x__86 & x__87 & x__88 & ~x__89 & x__90 & x__92 & ~x__96 & x__99 & x__109 & x__110 & ~x__111 & ~x__113 & x__115 & ~x__116 & ~x__117 & ~x__118 & x__119 & x__120 & ~x__122 & ~x__135 & x__136 & ~x__137 & x__138 & ~x__142 & x__144 & ~x__145 & x__146 & x__150 & x__157 & ~x__158 & x__160 & x__161 & ~x__162 & x__163 & x__164 & x__165 & x__168)', '( True & x__1 & ~x__4 & x__12 & ~x__13 & x__21 & ~x__22 & ~x__26 & x__27 & ~x__28 & ~x__29 & x__31 & ~x__37 & x__38 & x__39 & x__40 & ~x__49 & x__50 & x__52 & ~x__53 & ~x__57 & x__58 & x__59 & ~x__63 & ~x__64 & x__67 & ~x__69 & x__70 & x__72 & x__73 & ~x__76 & x__79 & ~x__80 & x__81 & x__83 & x__84 & x__86 & ~x__87 & x__88 & x__92 & x__100 & x__101 & ~x__102 & x__106 & ~x__111 & x__112 & x__113 & x__114 & ~x__118 & x__120 & ~x__121 & ~x__122 & x__123 & ~x__125 & ~x__126 & x__132 & ~x__139 & x__140 & x__142 & ~x__143 & x__144 & ~x__146 & x__150 & ~x__153 & ~x__159 & ~x__160 & ~x__162 & ~x__167 & x__168)', '( True & ~x__0 & ~x__5 & x__8 & x__9 & x__15 & ~x__17 & ~x__18 & ~x__21 & ~x__22 & x__24 & ~x__25 & x__26 & x__35 & x__36 & ~x__37 & x__40 & ~x__41 & x__42 & ~x__43 & x__45 & x__50 & ~x__52 & x__53 & ~x__54 & x__56 & ~x__58 & ~x__59 & x__60 & x__64 & x__68 & ~x__69 & ~x__71 & ~x__72 & x__74 & ~x__75 & x__78 & x__83 & x__84 & ~x__86 & x__87 & x__91 & x__93 & x__94 & ~x__95 & x__97 & x__99 & x__103 & x__107 & x__108 & ~x__112 & x__114 & x__115 & ~x__118 & x__120 & x__127 & x__128 & ~x__129 & x__130 & ~x__132 & x__136 & ~x__138 & ~x__140 & x__143 & ~x__146 & x__147 & ~x__149 & x__150 & ~x__153 & ~x__156 & ~x__157 & x__160 & ~x__161 & ~x__163 & ~x__166 & ~x__170)', '( True & x__0 & x__1 & ~x__6 & ~x__11 & ~x__13 & x__14 & x__17 & x__18 & x__19 & x__20 & ~x__24 & ~x__25 & ~x__27 & ~x__30 & ~x__31 & x__32 & x__35 & ~x__38 & x__39 & ~x__40 & x__41 & x__44 & ~x__46 & ~x__53 & x__54 & x__55 & ~x__56 & x__62 & ~x__64 & x__65 & x__67 & ~x__69 & ~x__70 & x__71 & ~x__73 & ~x__77 & x__81 & x__82 & ~x__83 & ~x__86 & x__88 & x__91 & ~x__93 & x__97 & x__98 & x__101 & x__108 & ~x__115 & x__116 & ~x__120 & x__124 & ~x__126 & ~x__134 & ~x__136 & ~x__142 & ~x__143 & ~x__145 & ~x__146 & x__147 & x__149 & ~x__150 & ~x__152 & ~x__154 & ~x__155 & ~x__157 & x__158 & ~x__160 & ~x__162 & ~x__167)', '( True & x__0 & ~x__1 & ~x__3 & ~x__4 & x__11 & ~x__15 & ~x__17 & x__19 & x__24 & ~x__27 & x__32 & x__35 & ~x__36 & ~x__39 & x__43 & ~x__53 & ~x__55 & x__56 & ~x__61 & x__63 & ~x__64 & x__65 & x__69 & x__71 & x__73 & ~x__74 & ~x__75 & ~x__76 & ~x__77 & x__80 & x__81 & x__84 & x__85 & x__87 & ~x__92 & ~x__94 & x__95 & ~x__96 & x__98 & ~x__99 & ~x__104 & x__105 & ~x__106 & ~x__110 & ~x__114 & ~x__121 & x__123 & ~x__124 & ~x__127 & x__128 & ~x__129 & x__130 & x__135 & ~x__136 & x__137 & ~x__149 & ~x__150 & ~x__151 & ~x__153 & x__154 & x__155 & x__159 & x__161 & x__163 & x__164 & x__165 & ~x__167 & x__170 & x__171)', '( True & ~x__0 & x__1 & x__2 & x__4 & x__5 & ~x__13 & ~x__14 & x__17 & ~x__20 & ~x__21 & x__22 & x__23 & ~x__24 & ~x__26 & ~x__27 & ~x__28 & ~x__31 & x__37 & ~x__38 & ~x__42 & x__44 & ~x__47 & x__50 & x__57 & ~x__58 & x__59 & x__64 & ~x__65 & x__70 & ~x__71 & x__72 & x__73 & x__76 & ~x__79 & x__87 & ~x__88 & ~x__89 & ~x__94 & ~x__98 & x__101 & x__103 & x__107 & x__117 & ~x__120 & ~x__121 & ~x__124 & ~x__126 & x__128 & ~x__130 & x__131 & ~x__133 & ~x__136 & x__140 & ~x__142 & x__147 & ~x__152 & ~x__153 & x__155 & ~x__156 & ~x__157 & ~x__159 & ~x__166 & ~x__169 & x__173)', '( True & x__2 & x__7 & ~x__10 & x__11 & x__14 & x__16 & x__17 & x__18 & x__20 & ~x__23 & x__27 & ~x__29 & ~x__31 & x__35 & ~x__37 & ~x__38 & ~x__40 & ~x__43 & x__44 & ~x__49 & ~x__53 & x__57 & ~x__59 & ~x__63 & ~x__65 & ~x__71 & x__73 & x__77 & ~x__79 & ~x__80 & ~x__81 & ~x__85 & x__86 & x__87 & x__91 & x__93 & x__95 & ~x__96 & x__98 & x__99 & x__102 & x__105 & ~x__110 & x__111 & ~x__115 & x__116 & x__117 & x__118 & x__120 & x__122 & x__123 & ~x__124 & ~x__128 & ~x__130 & ~x__131 & x__132 & x__134 & x__140 & ~x__141 & ~x__143 & ~x__145 & x__148 & x__150 & ~x__155 & x__156 & x__158 & x__162 & ~x__164 & ~x__167 & x__169 & x__173)', '( True & ~x__1 & x__6 & x__10 & x__14 & x__17 & ~x__18 & x__19 & ~x__20 & x__22 & ~x__23 & ~x__31 & x__32 & x__34 & ~x__39 & x__40 & ~x__43 & x__44 & ~x__48 & x__50 & ~x__51 & ~x__53 & ~x__54 & x__55 & ~x__56 & ~x__57 & ~x__58 & ~x__59 & x__63 & x__64 & ~x__65 & ~x__70 & ~x__72 & ~x__75 & x__76 & ~x__81 & ~x__87 & x__90 & x__92 & x__93 & x__94 & x__95 & x__96 & x__97 & x__99 & ~x__101 & ~x__104 & x__106 & ~x__109 & ~x__110 & ~x__114 & x__120 & ~x__128 & ~x__130 & ~x__131 & ~x__132 & x__137 & x__140 & x__143 & ~x__144 & ~x__145 & x__146 & ~x__147 & x__149 & x__150 & x__151 & x__152 & x__156 & x__157 & ~x__163 & ~x__166 & x__167 & x__168 & ~x__170 & ~x__172 & x__173 & ~x__174)', '( True & x__3 & ~x__7 & x__8 & x__11 & ~x__12 & x__14 & ~x__19 & x__21 & x__22 & ~x__23 & x__25 & x__27 & x__35 & x__36 & x__38 & ~x__42 & ~x__44 & ~x__48 & x__56 & ~x__57 & ~x__59 & x__62 & x__65 & ~x__66 & ~x__67 & ~x__69 & ~x__71 & ~x__74 & ~x__75 & x__78 & ~x__81 & x__83 & ~x__86 & ~x__87 & x__90 & ~x__96 & x__99 & x__101 & x__104 & ~x__107 & x__108 & x__109 & ~x__111 & ~x__114 & ~x__115 & x__116 & ~x__120 & x__125 & x__126 & x__127 & x__128 & ~x__129 & ~x__131 & ~x__132 & x__133 & ~x__136 & x__138 & ~x__139 & ~x__140 & x__147 & x__149 & x__150 & x__152 & ~x__153 & ~x__155 & x__156 & x__157 & ~x__158 & x__159 & ~x__162 & ~x__164 & x__165 & x__166 & ~x__167 & ~x__168 & ~x__170 & ~x__171)', '( True & ~x__1 & x__6 & ~x__8 & ~x__9 & ~x__14 & ~x__15 & ~x__16 & ~x__17 & x__22 & x__23 & ~x__26 & x__29 & ~x__34 & x__35 & x__36 & x__37 & x__39 & ~x__40 & x__41 & x__42 & x__44 & ~x__45 & ~x__48 & ~x__49 & ~x__54 & x__56 & ~x__57 & ~x__59 & ~x__60 & ~x__67 & x__72 & x__73 & ~x__76 & ~x__78 & x__80 & x__81 & x__84 & x__85 & x__86 & ~x__89 & ~x__94 & ~x__102 & ~x__103 & x__106 & x__107 & x__108 & x__110 & ~x__113 & ~x__114 & x__116 & x__117 & x__119 & ~x__125 & x__127 & ~x__128 & ~x__131 & x__138 & ~x__141 & x__142 & ~x__143 & ~x__144 & ~x__145 & ~x__146 & x__149 & x__150 & ~x__154 & ~x__155 & ~x__160 & x__161 & ~x__163 & ~x__164 & ~x__172 & x__173 & ~x__174 & x__176)', '( True & x__1 & x__2 & x__3 & ~x__7 & x__9 & ~x__11 & ~x__13 & x__17 & x__26 & ~x__27 & x__31 & ~x__32 & x__33 & ~x__36 & ~x__37 & ~x__40 & ~x__44 & x__48 & x__49 & ~x__50 & ~x__52 & ~x__56 & x__57 & ~x__60 & x__62 & x__68 & x__69 & ~x__74 & ~x__75 & ~x__76 & ~x__79 & x__80 & x__81 & ~x__82 & ~x__83 & ~x__84 & x__85 & x__87 & ~x__93 & ~x__95 & ~x__98 & ~x__99 & ~x__100 & ~x__104 & x__105 & x__107 & x__109 & ~x__111 & x__114 & x__116 & x__117 & x__121 & x__124 & ~x__125 & ~x__126 & ~x__130 & ~x__131 & ~x__134 & x__136 & ~x__138 & ~x__145 & ~x__148 & ~x__149 & ~x__152 & x__153 & ~x__154 & x__156 & ~x__157 & x__158 & x__160 & ~x__162 & x__163 & ~x__165 & ~x__166 & ~x__168 & ~x__169 & x__172 & ~x__174 & ~x__175 & ~x__178)', '( True & ~x__1 & x__4 & ~x__8 & ~x__12 & x__14 & ~x__15 & x__16 & ~x__17 & ~x__23 & ~x__24 & ~x__25 & ~x__26 & ~x__30 & ~x__32 & x__37 & x__38 & ~x__41 & x__42 & ~x__43 & ~x__44 & x__45 & x__48 & x__50 & ~x__51 & ~x__53 & x__56 & ~x__58 & ~x__59 & ~x__61 & x__62 & ~x__65 & x__66 & x__67 & ~x__68 & ~x__69 & x__73 & ~x__74 & x__75 & ~x__76 & ~x__79 & x__80 & ~x__81 & ~x__84 & ~x__92 & ~x__98 & ~x__99 & x__101 & x__110 & x__116 & ~x__117 & ~x__119 & x__120 & ~x__122 & x__123 & x__127 & x__130 & ~x__133 & ~x__135 & x__136 & x__141 & ~x__147 & x__151 & ~x__153 & x__154 & x__156 & x__157 & ~x__159 & ~x__164 & x__166 & ~x__167 & x__168 & ~x__173 & ~x__176 & x__177)', '( True & x__1 & ~x__2 & x__3 & ~x__5 & x__7 & ~x__10 & ~x__11 & x__12 & ~x__13 & ~x__15 & x__19 & x__20 & x__24 & ~x__27 & x__28 & x__30 & x__33 & ~x__34 & x__39 & x__40 & x__41 & ~x__47 & ~x__48 & x__51 & x__53 & ~x__54 & ~x__55 & ~x__57 & x__61 & ~x__62 & ~x__70 & ~x__72 & ~x__73 & ~x__75 & x__77 & ~x__80 & ~x__81 & x__83 & ~x__85 & x__86 & x__88 & ~x__93 & x__94 & x__100 & x__101 & x__102 & x__103 & ~x__106 & ~x__107 & x__109 & x__110 & x__112 & x__114 & ~x__119 & x__121 & x__122 & x__123 & x__126 & ~x__127 & x__130 & ~x__137 & x__138 & x__139 & ~x__140 & ~x__143 & x__144 & x__145 & ~x__147 & x__148 & x__149 & x__150 & ~x__151 & x__152 & ~x__157 & ~x__158 & x__159 & x__160 & ~x__162 & x__163 & ~x__164 & x__169 & ~x__170 & x__175 & ~x__179)', '( True & x__0 & x__2 & ~x__3 & x__5 & ~x__6 & x__7 & ~x__8 & ~x__12 & ~x__14 & x__15 & ~x__17 & x__20 & ~x__21 & x__22 & ~x__23 & x__24 & x__25 & ~x__26 & x__35 & ~x__36 & ~x__38 & x__42 & x__43 & ~x__44 & ~x__47 & x__48 & x__49 & ~x__51 & x__52 & x__60 & x__65 & ~x__66 & ~x__78 & x__80 & ~x__82 & x__83 & ~x__86 & x__89 & x__90 & ~x__91 & ~x__92 & x__96 & ~x__98 & x__111 & x__112 & ~x__113 & ~x__117 & x__118 & x__121 & x__122 & x__124 & x__126 & ~x__128 & x__130 & ~x__131 & ~x__132 & x__133 & x__138 & x__139 & x__140 & x__145 & x__147 & ~x__149 & x__158 & x__166 & x__169 & x__171 & ~x__173 & ~x__177 & x__179 & x__181)', '( True & ~x__1 & x__9 & x__13 & ~x__15 & x__16 & x__17 & x__19 & ~x__22 & x__23 & x__24 & ~x__26 & x__29 & x__30 & x__32 & ~x__36 & ~x__39 & ~x__40 & x__41 & x__47 & x__49 & x__51 & ~x__52 & ~x__56 & ~x__58 & x__62 & ~x__64 & x__65 & ~x__67 & ~x__68 & x__71 & x__72 & ~x__76 & ~x__77 & ~x__79 & ~x__81 & x__84 & ~x__86 & ~x__88 & x__89 & ~x__90 & x__93 & ~x__95 & ~x__96 & ~x__97 & ~x__99 & ~x__105 & ~x__108 & x__111 & ~x__112 & ~x__113 & x__116 & ~x__117 & ~x__118 & x__119 & ~x__123 & ~x__124 & ~x__125 & ~x__128 & x__130 & ~x__131 & ~x__142 & x__145 & ~x__146 & ~x__151 & ~x__152 & ~x__155 & ~x__158 & x__161 & ~x__163 & x__164 & ~x__169 & ~x__170 & ~x__171 & x__173 & x__174 & x__175 & x__177 & ~x__178 & x__182)', '( True & x__3 & x__4 & x__7 & x__10 & ~x__14 & x__17 & ~x__18 & ~x__21 & ~x__23 & ~x__26 & ~x__29 & x__30 & x__31 & x__36 & x__37 & ~x__44 & ~x__49 & ~x__52 & x__55 & x__57 & x__58 & ~x__59 & ~x__61 & ~x__64 & x__66 & ~x__67 & x__68 & x__75 & x__77 & x__81 & x__82 & x__83 & ~x__93 & ~x__98 & ~x__102 & ~x__105 & x__107 & x__108 & ~x__109 & x__111 & x__112 & x__114 & ~x__115 & ~x__116 & x__117 & ~x__123 & ~x__128 & x__135 & ~x__136 & ~x__137 & x__139 & ~x__140 & x__143 & ~x__144 & ~x__149 & x__150 & x__152 & x__154 & x__156 & x__157 & ~x__158 & x__159 & x__162 & ~x__168 & ~x__175 & ~x__178 & x__180 & x__181)', '( True & ~x__2 & x__4 & ~x__8 & x__11 & x__14 & x__17 & x__18 & x__19 & ~x__20 & x__21 & x__23 & x__24 & ~x__25 & x__26 & x__27 & x__29 & ~x__32 & x__33 & x__34 & x__37 & x__42 & x__45 & ~x__47 & x__50 & ~x__51 & x__53 & ~x__54 & x__56 & ~x__62 & ~x__68 & ~x__69 & x__70 & x__71 & x__73 & x__78 & ~x__82 & ~x__85 & ~x__86 & x__88 & ~x__89 & x__94 & ~x__99 & x__101 & ~x__103 & ~x__104 & ~x__108 & x__110 & x__121 & ~x__122 & ~x__123 & x__124 & ~x__126 & x__132 & ~x__133 & ~x__138 & x__139 & ~x__140 & ~x__141 & ~x__144 & ~x__145 & ~x__149 & x__150 & x__152 & ~x__153 & x__155 & ~x__159 & x__160 & x__162 & x__163 & ~x__164 & ~x__166 & x__168 & x__174 & x__176 & x__177 & ~x__178 & ~x__180 & ~x__182 & ~x__183 & ~x__184)', '( True & ~x__2 & x__7 & x__10 & ~x__13 & x__18 & ~x__19 & ~x__22 & x__26 & ~x__27 & x__31 & x__34 & ~x__36 & ~x__38 & ~x__40 & ~x__44 & x__45 & x__51 & x__54 & x__56 & x__57 & ~x__58 & ~x__62 & ~x__64 & x__68 & ~x__69 & x__70 & x__71 & x__77 & x__78 & x__79 & x__86 & x__87 & ~x__90 & ~x__91 & x__93 & ~x__103 & x__109 & ~x__115 & x__119 & ~x__121 & ~x__122 & x__123 & ~x__127 & x__128 & ~x__132 & x__136 & ~x__137 & x__141 & x__142 & ~x__143 & ~x__145 & ~x__147 & x__150 & ~x__154 & ~x__157 & x__158 & x__162 & x__164 & ~x__167 & ~x__169 & ~x__173 & ~x__179 & x__181 & x__182 & ~x__184)', '( True & ~x__1 & ~x__2 & x__4 & ~x__6 & ~x__10 & ~x__17 & ~x__20 & ~x__22 & x__23 & ~x__26 & x__27 & ~x__29 & x__30 & ~x__31 & ~x__34 & x__36 & ~x__41 & ~x__43 & x__47 & ~x__48 & x__51 & ~x__54 & ~x__57 & ~x__59 & x__61 & x__63 & x__65 & x__66 & ~x__71 & x__72 & ~x__73 & x__76 & x__82 & ~x__90 & ~x__91 & x__95 & ~x__97 & ~x__100 & x__101 & x__104 & x__105 & x__109 & ~x__110 & x__112 & x__114 & x__115 & x__116 & ~x__118 & x__120 & x__121 & x__123 & x__125 & ~x__128 & x__132 & ~x__133 & x__135 & ~x__137 & ~x__138 & ~x__139 & x__140 & x__141 & x__144 & x__145 & x__146 & ~x__149 & ~x__150 & ~x__153 & ~x__155 & x__158 & x__161 & x__164 & x__167 & x__170 & ~x__171 & x__173 & x__174 & x__178 & x__179 & ~x__181 & x__184)', '( True & x__0 & ~x__2 & x__6 & ~x__9 & ~x__13 & ~x__14 & ~x__22 & x__23 & x__24 & ~x__27 & x__30 & x__31 & x__36 & x__39 & x__42 & ~x__45 & x__46 & ~x__47 & ~x__48 & ~x__49 & x__56 & x__58 & ~x__60 & ~x__64 & x__65 & x__67 & x__70 & ~x__71 & ~x__72 & x__75 & x__80 & ~x__90 & ~x__93 & x__96 & ~x__99 & x__104 & x__106 & ~x__113 & x__115 & x__118 & x__119 & ~x__120 & ~x__121 & ~x__126 & ~x__127 & x__128 & x__129 & ~x__133 & x__138 & ~x__148 & x__150 & ~x__153 & ~x__159 & x__160 & ~x__163 & ~x__164 & ~x__165 & ~x__167 & x__169 & ~x__174 & x__176 & x__178 & x__179 & x__180 & x__181 & x__182 & ~x__184 & ~x__187)', '( True & x__0 & x__1 & ~x__3 & x__6 & x__8 & x__12 & ~x__15 & x__17 & x__25 & ~x__31 & ~x__32 & x__33 & x__34 & x__38 & ~x__40 & x__41 & x__42 & ~x__44 & x__48 & x__49 & ~x__50 & ~x__51 & ~x__55 & ~x__59 & ~x__60 & x__61 & x__65 & x__70 & x__74 & ~x__75 & ~x__78 & ~x__82 & x__84 & x__95 & ~x__96 & x__99 & ~x__103 & ~x__104 & x__106 & x__111 & x__116 & x__118 & x__121 & ~x__125 & ~x__127 & x__131 & x__136 & ~x__137 & x__143 & x__148 & ~x__150 & ~x__154 & x__155 & x__156 & x__157 & x__162 & x__164 & ~x__168 & x__169 & ~x__171 & ~x__172 & x__173 & ~x__177 & x__180 & x__182 & ~x__183 & x__184 & ~x__186)', '( True & x__1 & ~x__6 & ~x__15 & x__20 & x__23 & ~x__24 & ~x__25 & ~x__26 & ~x__28 & x__40 & ~x__41 & x__42 & ~x__44 & x__45 & ~x__49 & x__51 & x__53 & x__54 & x__56 & x__57 & x__58 & x__65 & ~x__67 & ~x__68 & ~x__73 & x__81 & x__84 & x__88 & x__89 & ~x__93 & x__94 & x__96 & ~x__97 & ~x__101 & ~x__102 & ~x__103 & ~x__104 & x__106 & x__107 & ~x__108 & x__109 & x__116 & ~x__118 & x__119 & x__120 & x__122 & ~x__123 & ~x__125 & ~x__127 & x__128 & ~x__139 & ~x__141 & ~x__142 & x__143 & ~x__145 & x__151 & x__152 & x__156 & x__157 & x__158 & ~x__159 & ~x__161 & ~x__163 & ~x__166 & ~x__169 & ~x__170 & ~x__171 & ~x__177 & x__183 & x__186)', '( True & ~x__0 & ~x__1 & x__4 & x__5 & x__9 & ~x__12 & x__13 & x__14 & x__17 & x__28 & ~x__32 & x__35 & x__39 & ~x__40 & x__44 & x__46 & x__47 & ~x__49 & x__50 & ~x__52 & ~x__54 & ~x__62 & ~x__64 & ~x__68 & x__71 & ~x__73 & ~x__76 & x__77 & ~x__78 & ~x__79 & x__83 & x__84 & x__87 & ~x__88 & ~x__91 & ~x__92 & x__94 & x__96 & x__97 & x__99 & ~x__106 & ~x__107 & ~x__112 & ~x__115 & ~x__122 & x__125 & x__130 & ~x__131 & ~x__133 & x__136 & x__137 & x__138 & ~x__142 & ~x__144 & x__145 & ~x__147 & ~x__148 & ~x__151 & x__153 & x__155 & ~x__158 & x__159 & x__160 & x__165 & ~x__172 & x__175 & ~x__177 & x__179)', '( True & ~x__4 & ~x__6 & x__7 & x__11 & ~x__12 & ~x__14 & x__16 & x__19 & ~x__21 & ~x__22 & x__24 & x__25 & x__28 & x__30 & x__31 & x__38 & x__41 & x__42 & ~x__43 & x__45 & ~x__50 & ~x__55 & ~x__56 & ~x__58 & x__59 & x__68 & x__69 & ~x__70 & x__72 & ~x__75 & x__78 & ~x__81 & x__85 & x__86 & ~x__95 & ~x__96 & ~x__97 & ~x__102 & ~x__103 & x__104 & x__109 & ~x__116 & ~x__117 & ~x__119 & ~x__120 & ~x__122 & ~x__123 & ~x__126 & ~x__127 & x__128 & x__130 & ~x__131 & x__134 & x__135 & ~x__136 & x__142 & x__145 & ~x__148 & x__150 & x__155 & x__159 & ~x__167 & ~x__168 & ~x__175 & x__179 & x__182 & x__184 & x__185 & ~x__188 & x__190 & x__191)', '( True & x__0 & x__1 & x__4 & ~x__6 & x__7 & x__8 & ~x__9 & ~x__11 & ~x__13 & x__14 & ~x__17 & x__18 & ~x__19 & x__22 & x__23 & x__26 & ~x__30 & x__31 & x__32 & x__33 & ~x__37 & x__42 & x__43 & x__44 & ~x__47 & x__48 & x__50 & ~x__55 & ~x__56 & ~x__62 & ~x__64 & ~x__67 & ~x__69 & ~x__71 & x__72 & ~x__74 & x__79 & ~x__80 & ~x__83 & ~x__85 & x__87 & ~x__89 & x__94 & x__95 & x__98 & ~x__99 & x__102 & x__104 & x__107 & x__108 & x__110 & x__111 & x__115 & ~x__117 & x__124 & ~x__127 & x__130 & x__131 & ~x__132 & ~x__135 & x__138 & ~x__140 & x__141 & x__145 & ~x__147 & ~x__148 & ~x__150 & x__151 & ~x__155 & x__157 & ~x__158 & ~x__159 & ~x__162 & x__166 & x__170 & x__173 & ~x__174 & x__175 & x__177 & x__180 & ~x__185 & x__186 & x__187 & x__190 & x__192)', '( True & ~x__0 & x__5 & x__6 & x__8 & ~x__11 & x__14 & ~x__16 & ~x__17 & ~x__19 & ~x__22 & x__24 & ~x__28 & x__30 & x__31 & x__34 & x__35 & x__38 & ~x__39 & ~x__40 & x__48 & x__49 & ~x__54 & ~x__57 & ~x__61 & x__62 & ~x__64 & ~x__65 & x__67 & x__73 & ~x__74 & x__77 & x__79 & ~x__81 & ~x__87 & x__88 & x__89 & ~x__90 & x__91 & ~x__92 & x__98 & ~x__99 & ~x__102 & x__108 & x__112 & x__113 & ~x__114 & x__115 & ~x__117 & x__123 & ~x__125 & x__127 & x__129 & x__130 & ~x__131 & ~x__133 & x__134 & ~x__138 & x__139 & x__141 & ~x__145 & ~x__146 & x__148 & x__149 & x__150 & x__153 & ~x__157 & x__159 & ~x__160 & ~x__164 & x__166 & ~x__168 & x__171 & x__172 & ~x__173 & x__178 & x__179 & x__180 & x__183 & ~x__184 & x__185 & x__186 & x__187 & x__190 & ~x__191)', '( True & ~x__0 & ~x__5 & x__6 & ~x__7 & x__9 & x__12 & x__16 & x__17 & x__18 & x__22 & ~x__23 & ~x__28 & ~x__33 & x__35 & ~x__37 & x__41 & x__44 & x__48 & ~x__52 & ~x__56 & x__58 & x__59 & ~x__61 & ~x__63 & ~x__65 & ~x__69 & ~x__79 & x__81 & ~x__82 & x__87 & ~x__89 & x__93 & ~x__96 & x__100 & ~x__101 & x__102 & x__104 & x__105 & ~x__107 & ~x__110 & ~x__114 & ~x__118 & x__122 & x__124 & x__127 & ~x__128 & x__130 & ~x__131 & x__132 & ~x__134 & ~x__136 & x__139 & ~x__140 & ~x__143 & x__147 & x__151 & x__152 & ~x__157 & ~x__158 & ~x__165 & ~x__167 & x__168 & ~x__170 & x__175 & x__184 & x__185 & ~x__186 & ~x__187 & x__194)', '( True & ~x__0 & x__6 & ~x__8 & ~x__11 & x__12 & ~x__17 & ~x__22 & ~x__23 & ~x__25 & ~x__27 & x__30 & x__32 & ~x__35 & x__38 & x__42 & x__45 & ~x__46 & ~x__48 & ~x__50 & ~x__51 & x__57 & ~x__59 & x__60 & ~x__63 & ~x__64 & x__68 & ~x__69 & x__70 & x__71 & ~x__72 & x__75 & x__79 & x__80 & x__81 & x__83 & ~x__87 & ~x__92 & x__93 & x__95 & ~x__97 & ~x__98 & x__100 & x__101 & ~x__105 & x__106 & x__109 & x__112 & x__117 & x__120 & x__125 & x__126 & ~x__127 & ~x__128 & ~x__129 & x__131 & ~x__132 & ~x__133 & ~x__140 & x__145 & x__147 & ~x__150 & x__151 & ~x__152 & ~x__158 & x__161 & ~x__165 & ~x__168 & x__172 & x__173 & x__175 & ~x__176 & x__177 & x__178 & ~x__179 & x__180 & x__181 & x__186 & x__189 & ~x__190 & x__194)', '( True & x__0 & x__1 & x__2 & ~x__3 & ~x__6 & ~x__7 & x__8 & ~x__9 & x__11 & ~x__14 & ~x__19 & ~x__22 & ~x__27 & x__33 & x__34 & ~x__36 & x__40 & ~x__41 & ~x__43 & x__45 & x__46 & x__48 & x__49 & x__50 & x__51 & ~x__53 & x__58 & ~x__59 & x__63 & ~x__67 & ~x__71 & ~x__72 & x__73 & x__74 & x__75 & x__77 & ~x__80 & ~x__84 & ~x__85 & x__86 & x__90 & ~x__93 & ~x__94 & x__96 & ~x__98 & x__103 & ~x__106 & ~x__108 & ~x__109 & ~x__111 & x__112 & x__113 & x__119 & ~x__120 & ~x__127 & x__132 & ~x__135 & x__136 & ~x__137 & ~x__144 & x__146 & x__151 & x__152 & ~x__153 & ~x__155 & ~x__159 & x__164 & x__165 & x__166 & ~x__167 & ~x__168 & x__170 & ~x__175 & ~x__177 & x__181 & ~x__187 & x__192 & ~x__195 & ~x__196)', '( True & x__0 & x__3 & ~x__8 & x__13 & ~x__17 & x__21 & ~x__25 & ~x__26 & x__29 & ~x__30 & ~x__32 & ~x__34 & x__35 & ~x__37 & x__38 & ~x__39 & ~x__44 & x__45 & x__46 & ~x__49 & ~x__54 & ~x__56 & x__58 & x__60 & ~x__65 & ~x__69 & x__71 & ~x__73 & x__75 & ~x__76 & x__80 & x__81 & x__82 & x__83 & ~x__84 & ~x__89 & x__92 & ~x__94 & x__95 & ~x__98 & ~x__99 & ~x__100 & x__101 & x__103 & ~x__104 & x__105 & ~x__106 & x__107 & x__109 & ~x__110 & ~x__115 & ~x__117 & x__119 & ~x__122 & ~x__125 & ~x__127 & ~x__133 & x__137 & ~x__140 & ~x__142 & ~x__143 & x__148 & x__149 & ~x__150 & x__152 & x__155 & x__160 & x__162 & ~x__167 & x__169 & ~x__171 & ~x__173 & x__175 & x__178 & x__180 & x__181 & x__182 & ~x__187 & ~x__189 & x__193 & ~x__194)', '( True & ~x__3 & x__13 & x__17 & ~x__20 & ~x__22 & ~x__23 & x__25 & ~x__28 & ~x__29 & ~x__33 & x__37 & ~x__38 & ~x__41 & x__43 & ~x__44 & ~x__46 & ~x__49 & x__50 & ~x__52 & ~x__53 & x__54 & x__57 & x__58 & x__60 & x__63 & ~x__66 & ~x__72 & ~x__73 & x__75 & ~x__80 & ~x__87 & ~x__88 & x__92 & ~x__93 & x__97 & ~x__98 & ~x__101 & ~x__103 & x__104 & x__109 & x__112 & x__113 & x__114 & x__115 & x__116 & ~x__119 & x__120 & x__124 & x__125 & ~x__127 & x__130 & ~x__131 & x__139 & x__141 & ~x__142 & x__143 & ~x__146 & ~x__153 & ~x__160 & x__161 & ~x__162 & x__164 & x__168 & ~x__174 & x__176 & x__178 & x__180 & x__182 & x__183 & x__185 & x__187 & ~x__189 & ~x__190 & ~x__194 & ~x__198)']


def test_run_1_set(model: Model, seq_num: int, func, message: str):
    message_cont = ""
    set1 = model.bdd.add_expr("True")

    # FOLLOWS version 1:
    """
    # first lets determine what the testing set will be based on the seq num
    if seq_num == 0:
        message_cont = "set1= s1"
        set1 = labeled_by('s__1', model)
    elif seq_num == 1:
        message_cont = "set1= s2"
        set1 = labeled_by('s__2', model)
    elif seq_num == 2:
        message_cont = "set1= EX(s1 & s2)"
        set1 = EX(model, labeled_by('s__1', model) & labeled_by('s__2', model))
    elif seq_num == 3:
        message_cont = "set1= x"
        set1 = create_comparator(model, 'x')
    elif seq_num == 4:
        message_cont = "set1= EX x"
        set1 = EX(model, create_comparator(model, 'x'))
    elif seq_num == 5:
        message_cont = "set1= AX x"
        set1 = AX(model, create_comparator(model, 'x'))
    elif seq_num == 6:
        message_cont = "set1= ((EX x) | x)"
        set1 = create_comparator(model, 'x') | EX(model, create_comparator(model, 'x'))
    elif seq_num == 7:
        message_cont = "set1= (SINK | s1)"
        set1 = model_check_fixed2_v3(model) | labeled_by('s__1', model)
    elif seq_num == 8:
        message_cont = "set1= EF x"
        set1 = EF(model, create_comparator(model, 'x'))
    elif seq_num == 9:
        message_cont = "set1= EF x | s1"
        set1 = EF(model, create_comparator(model, 'x')) | labeled_by('s__1', model)
    elif seq_num == 10:
        message_cont = "set1= EF x & s1"
        set1 = EF(model, create_comparator(model, 'x')) & labeled_by('s__1', model)
    """

    # version 2:
    # first lets determine what the testing set will be based on the seq num
    x_content = X_COMBINATIONS[model.num_props]
    if seq_num == 0:
        message_cont = f"set1= EX((s1 & s2) & {x_content}"
        set1 = EX(model, (labeled_by('s__1', model) & labeled_by('s__2', model)) &
                  model.bdd.add_expr(x_content))
    elif seq_num == 1:
        message_cont = f"set1= EX((s1 => s2) & {x_content}"
        set1 = EX(model, (labeled_by('s__1', model).implies(labeled_by('s__2', model))) &
                  model.bdd.add_expr(x_content))
    elif seq_num == 2:
        message_cont = f"set1= EX((s1 <=> s2) & {x_content}"
        set1 = EX(model, (labeled_by('s__1', model).equiv(labeled_by('s__2', model))) &
                  model.bdd.add_expr(x_content))
    if seq_num == 3:
        message_cont = f"set1= EX((s3 & s4) & {x_content}"
        set1 = EX(model, (labeled_by('s__3', model) & labeled_by('s__4', model)) &
                  model.bdd.add_expr(x_content))
    elif seq_num == 4:
        message_cont = f"set1= EX((s3 => s4) & {x_content}"
        set1 = EX(model, (labeled_by('s__3', model).implies(labeled_by('s__4', model))) &
                  model.bdd.add_expr(x_content))
    elif seq_num == 5:
        message_cont = f"set1= EX((s3 <=> s4) & {x_content}"
        set1 = EX(model, (labeled_by('s__3', model).equiv(labeled_by('s__4', model))) &
                  model.bdd.add_expr(x_content))

    start = time.time()
    res = func(model, set1)
    end = time.time()
    print_results(res, model, message + ", " + message_cont, False)
    print("time: ", end - start, '\n')


def test_run_2_sets(model: Model, seq_num: int, func, message: str):
    message_cont = ""
    set1 = model.bdd.add_expr("True")
    set2 = model.bdd.add_expr("True")

    # first lets determine what the testing sets will be based on the seq num
    if seq_num == 0:
        message_cont = "set1= s1, set2= s2"
        set1 = labeled_by('s__1', model)
        set2 = labeled_by('s__1', model)
    elif seq_num == 1:
        message_cont = "set1= s2, set2= s3"
        set1 = labeled_by('s__2', model)
        set2 = labeled_by('s__3', model)
    elif seq_num == 2:
        message_cont = "set1= (s1 & s2), set2= (s3 & s4)"
        set1 = labeled_by('s__1', model) & labeled_by('s__2', model)
        set2 = labeled_by('s__3', model) & labeled_by('s__4', model)
    elif seq_num == 3:
        message_cont = "set1= (s1 | s2), set2= (s3 | s4)"
        set1 = labeled_by('s__1', model) | labeled_by('s__2', model)
        set2 = labeled_by('s__3', model) | labeled_by('s__4', model)
    elif seq_num == 4:
        message_cont = "set1= SINKS, set2= EX SINKS"
        set1 = model_check_fixed2_v3(model)
        set2 = EX(model, model_check_fixed2_v3(model))
    elif seq_num == 5:
        message_cont = "set1= x, set2= EX x"
        set1 = create_comparator(model, 'x')
        set2 = EX(model, create_comparator(model, 'x'))
    elif seq_num == 6:
        message_cont = "set1= AX x, set2= x"
        set1 = AX(model, create_comparator(model, 'x'))
        set2 = create_comparator(model, 'x')
    elif seq_num == 7:
        message_cont = "set1= x, set2= s1"
        set1 = create_comparator(model, 'x')
        set2 = labeled_by('s__1', model)
    elif seq_num == 8:
        message_cont = "set1= s2, set2= x"
        set1 = labeled_by('s__2', model)
        set2 = create_comparator(model, 'x')
    elif seq_num == 9:
        message_cont = "set1= x, set2= EF x"
        set1 = create_comparator(model, 'x')
        set2 = EF(model, create_comparator(model, 'x'))
    """
    elif seq_num == 10:
        message_cont = "set1= EF x, set2= x"
        set1 = EF(model, create_comparator(model, 'x'))
        set2 = create_comparator(model, 'x')
    """

    start = time.time()
    res = func(model, set1, set2)
    end = time.time()
    print_results(res, model, message + ", " + message_cont, False)
    print("time: ", end - start, '\n')


def test_binder(model: Model, seq_num: int, optimized: bool = False) -> None:
    if not optimized:
        test_run_1_set(model, seq_num, model_check_test5a, "BINDER, NON-OPT")
    else:
        test_run_1_set(model, seq_num, model_check_test5b, "BINDER, OPT")


def test_jump(model: Model, seq_num: int, optimized: bool = False) -> None:
    if not optimized:
        test_run_1_set(model, seq_num, model_check_test6a, "JUMP, NON-OPT")
    else:
        test_run_1_set(model, seq_num, model_check_test6b, "JUMP, OPT")


def test_exist(model: Model, seq_num: int, optimized: bool = False) -> None:
    if not optimized:
        test_run_1_set(model, seq_num, model_check_test7a, "EXISTS, NON-OPT")
    else:
        test_run_1_set(model, seq_num, model_check_test7b, "EXISTS, OPT")


def test_union_both(model: Model, seq_num: int, optimized: bool = False) -> None:
    if not optimized:
        test_run_2_sets(model, seq_num, model_check_test1a, "(EX set1) | (EX set2), NON-OPT")
    else:
        test_run_2_sets(model, seq_num, model_check_test1b, "(EX set1) | (EX set2) OPT")


def test_union_one(model: Model, seq_num: int, optimized: bool = False) -> None:
    if not optimized:
        test_run_2_sets(model, seq_num, model_check_test3a, "(EX set1) | set2, NON-OPT")
    else:
        test_run_2_sets(model, seq_num, model_check_test3b, "(EX set1) | set2, OPT")


# CURRENTLY WORKS FOR FORMULAE WITH MAX 2 STATE-VARIABLES
def run_test_sets(file_name: str, test_name: str, test_num: int, test_type: str) -> None:
    # first we parse the input and create the model object
    model = bnet_parser(file_name)

    # lets get the desired test
    optimized = test_type == "o"
    if test_name == "binder":
        test_binder(model, test_num, optimized)
    elif test_name == "jump":
        test_jump(model, test_num, optimized)
    elif test_name == "exist":
        test_exist(model, test_num, optimized)
    elif test_name == "union_one":
        test_union_one(model, test_num, optimized)
    elif test_name == "union_both":
        test_union_both(model, test_num, optimized)


# ============================================================================================= #
# ======================================= OTHER TESTS ========================================= #
# ============================================================================================= #


# test "↓x (set1 | set2)" vs "(↓x set1) | (↓x set2)"
def new_test1(file_name: str):
    # first we parse the input and create the model object
    model = bnet_parser(file_name)

    set1 = AX(model, create_comparator(model, 'x'))
    set2 = create_comparator(model, 'x')  & labeled_by("s__0", model)

    def fn1():
        # "↓x (set1 | set2)"
        return bind(model, 'x', set1 | set2)

    def fn2():
        # "(↓x set1) | (↓x set2)"
        return bind(model, 'x', set1) | bind(model, 'x', set2)

    start = time.time()
    res1 = fn1()
    end = time.time()
    print("time: ", end - start, '\n')

    # res2 = fn2()
    # print(res1 == res2)


# test "↓x (EX set1 | EX set2)"
def new_test2(file_name: str):
    # first we parse the input and create the model object
    model = bnet_parser(file_name)

    set1 = EX(model, create_comparator(model, 'x'))
    set2 = create_comparator(model, 'x')

    def fn1():
        # outside
        return bind(model, 'x', EX(model, set1) | EX(model, set2))

    def fn2():
        # inside
        return model_check_test5b(model, set1) | model_check_test5b(model, set2)

    start = time.time()
    res1 = fn1()
    end = time.time()
    print("time: ", end - start, '\n')

    # res2 = fn2()
    # print(res1 == res2)


# we use 4 command line args (not counting script name): name of file + type of test + number of test + version of test
if __name__ == '__main__':
    if len(sys.argv) == 5:
        run_test_sets(sys.argv[1], sys.argv[2], int(sys.argv[3]), sys.argv[4])
    else:
        # incorrect num of arguments provided, lets print error message + do PREDEF model
        print("INCORRECT NUM OF ARGS")

        # lets go with predefined model and formula
        model_name = "011a.bnet"
        # TODO add path
        path_to_bnet = ""
        print("==================================")
        print("Model name: " + model_name)
        print("==================================\n")
        run_test_sets(path_to_bnet + model_name, "binder", 0, "o")
        print()
